<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android应用开发之一个简单的计算器</title>
    <url>/2023/03/03/Android%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E4%B9%8B%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8/</url>
    <content><![CDATA[<h1 id="Android应用开发之一个简单的计算器"><a href="#Android应用开发之一个简单的计算器" class="headerlink" title="Android应用开发之一个简单的计算器"></a>Android应用开发之一个简单的计算器</h1><p>首先声明，这只是一个特别简单的计算程序！不涉及复杂的逻辑运算规则</p>
<p>主要功能：</p>
<p>​    实现加减乘除操作</p>
<p>仅此而已。。。。。。</p>
<p>界面代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_result&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;245dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">&quot;天河三号&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center|top&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_clear&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;Clear&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textAllCaps</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_bs&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;BS&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_2&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_3&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_add&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;+&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_4&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_5&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;5&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_6&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;6&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_sub&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;-&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_7&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;7&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_8&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;8&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_9&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;9&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_multiply&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;*&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_0&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_dot&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;.&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_equal&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;=&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_divid&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/button_selector&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;/&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;right&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;哪些所有你乐意挥霍的时光，都不算是浪费。 By 约翰.列农&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>​    主要逻辑代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener &#123;</span><br><span class="line">TextView tv_result;</span><br><span class="line">Operator operator;</span><br><span class="line">BigDecimal bigDecimal_a;</span><br><span class="line">BigDecimal bigDecimal_b;</span><br><span class="line"><span class="type">double</span> operator_a;</span><br><span class="line"><span class="type">double</span> operator_b;</span><br><span class="line"><span class="type">boolean</span> is_first_operator=<span class="literal">true</span>;</span><br><span class="line"><span class="type">int</span> cur_pos=<span class="number">0</span>;</span><br><span class="line">Integer[] fun_btn=&#123;R.id.btn_clear,R.id.btn_bs,R.id.btn_equal&#125;;</span><br><span class="line">Integer[] num_btn=&#123;R.id.btn_0,R.id.btn_1,R.id.btn_2,R.id.btn_3,R.id.btn_4,R.id.btn_5,R.id.btn_6,R.id.btn_7,R.id.btn_8,R.id.btn_9,R.id.btn_dot&#125;;</span><br><span class="line">Integer[] calc_btn=&#123;R.id.btn_add,R.id.btn_sub,R.id.btn_multiply,R.id.btn_divid&#125;;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        tv_result=findViewById(R.id.tv_result);</span><br><span class="line">        <span class="keyword">for</span> (Integer i:num_btn)&#123;</span><br><span class="line">            findViewById(i).setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (Integer i:calc_btn)&#123;</span><br><span class="line">            findViewById(i).setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(Integer i:fun_btn)&#123;</span><br><span class="line">            findViewById(i).setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (Arrays.asList(num_btn).contains(v.getId()))&#123;</span><br><span class="line">          tv_result.append(((Button)v).getText());</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//这是计算按钮的功能</span></span><br><span class="line">        <span class="keyword">if</span> (Arrays.asList(calc_btn).contains(v.getId()))&#123;</span><br><span class="line">            <span class="keyword">if</span> (is_first_operator)&#123;</span><br><span class="line">                String tmp=tv_result.getText().toString();</span><br><span class="line">                operator_a=Double.parseDouble(tmp);</span><br><span class="line">                bigDecimal_a=BigDecimal.valueOf(operator_a);</span><br><span class="line">                operator=OperatorFactory.getOperator(((Button)v).getText().toString());</span><br><span class="line">                tv_result.append(((Button)v).getText());</span><br><span class="line">                cur_pos=tv_result.getText().length();</span><br><span class="line">                is_first_operator=<span class="literal">false</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                String tmp=tv_result.getText().toString();</span><br><span class="line">                operator_b=Double.parseDouble(tmp.substring(cur_pos,tmp.length()));</span><br><span class="line">                bigDecimal_b=BigDecimal.valueOf(operator_b);</span><br><span class="line">                tv_result.append(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">                <span class="type">double</span> result=operator.getResult(operator_a,operator_b);</span><br><span class="line">                BigDecimal bigDecimal_result=operator.getResultB(bigDecimal_a,bigDecimal_b);</span><br><span class="line"><span class="comment">//                tv_result.append(Double.toString(result));</span></span><br><span class="line">                tv_result.append(bigDecimal_result.toString());</span><br><span class="line">                tv_result.append(((Button)v).getText());</span><br><span class="line">                cur_pos=tv_result.getText().length();</span><br><span class="line">                operator_a=result;</span><br><span class="line">                operator=OperatorFactory.getOperator(((Button)v).getText().toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.btn_clear:</span><br><span class="line">                tv_result.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                is_first_operator = <span class="literal">true</span>;</span><br><span class="line">                cur_pos = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btn_equal:</span><br><span class="line">                <span class="type">String</span> <span class="variable">tmp</span> <span class="operator">=</span> tv_result.getText().toString();</span><br><span class="line">                operator_b = Double.parseDouble(tmp.substring(cur_pos,tmp.length()));</span><br><span class="line">                bigDecimal_b = BigDecimal.valueOf(operator_b);</span><br><span class="line">                tv_result.append(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">result</span> <span class="operator">=</span> operator.getResult(operator_a,operator_b);</span><br><span class="line">                <span class="type">BigDecimal</span> <span class="variable">bigDecimal_result</span> <span class="operator">=</span> operator.getResultB(bigDecimal_a,bigDecimal_b);</span><br><span class="line"><span class="comment">//                tv_result.append(Double.toString(result));</span></span><br><span class="line">                cur_pos = tv_result.getText().length();</span><br><span class="line">                operator_a=result;</span><br><span class="line">                tv_result.append(bigDecimal_result.toString());</span><br><span class="line">                is_first_operator = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这是一个简单的Android计算器应用程序的主活动(MainActivity)的代码，其中实现了View.OnClickListener接口来处理所有的按钮点击事件。</p>
<p>在onCreate()方法中，它初始化了一些变量和UI元素，例如TextView tv_result来显示计算结果，以及分别包含数字按钮、计算按钮和功能按钮的数组num_btn、calc_btn和fun_btn。然后，使用循环为所有按钮设置点击事件监听器。</p>
<p>在onClick()方法中，首先检查点击的按钮是否为数字按钮，如果是，则将该数字追加到tv_result TextView中。</p>
<p>如果点击的是计算按钮，则检查是否是第一个操作符。如果是第一个操作符，则将tv_result中的内容解析为一个双精度浮点数，并将其赋给变量operator_a和bigDecimal_a。同时，使用OperatorFactory.getOperator()方法获得对应操作符的实例。然后，将操作符添加到tv_result的末尾，将当前位置cur_pos设置为tv_result的长度，并将is_first_operator标志设置为false。</p>
<p>如果不是第一个操作符，则将tv_result的内容从上一次操作符的位置（即cur_pos）开始解析为一个双精度浮点数，并将其赋给变量operator_b和bigDecimal_b。然后，在tv_result的末尾添加“=”符号，计算并显示结果，并将operator_a设置为结果，operator设置为新的操作符，cur_pos设置为tv_result的长度。</p>
<p>最后，如果点击的是功能按钮，则根据按钮的ID执行相应的操作，例如清除结果或计算结果并重置状态(is_first_operator设置为true)。</p>
<p>在计算结果时，使用BigDecimal来避免双精度浮点数的精度问题。可以通过调用operator.getResultB()方法来获取BigDecimal类型的结果，将其转换为字符串并将其追加到tv_result中显示出来。</p>
<p>界面详情：</p>
<p>!<img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303164808278.png" alt="image-20230303164808278"></p>
<p><strong>注：完整代码项目见GitHub</strong></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Python100天---day01~day07</title>
    <url>/2023/03/20/Python100%E5%A4%A9-day01-day07/</url>
    <content><![CDATA[<h1 id="Python100天—第一天"><a href="#Python100天—第一天" class="headerlink" title="Python100天—第一天"></a>Python100天—第一天</h1><p>邓小龙 2023.3.1</p>
<h2 id="第一关：hello-world"><a href="#第一关：hello-world" class="headerlink" title="第一关：hello world"></a>第一关：hello world</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello, world!&#x27;</span>)</span><br><span class="line"><span class="comment"># print(&quot;你好,世界！&quot;)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你好&#x27;</span>, <span class="string">&#x27;世界&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;world&#x27;</span>, sep=<span class="string">&#x27;, &#x27;</span>, end=<span class="string">&#x27;!&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;goodbye, world&#x27;</span>, end=<span class="string">&#x27;!\n&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>太过于简单，不解释</p>
<h2 id="第二关：用Python的turtle模块绘制国旗"><a href="#第二关：用Python的turtle模块绘制国旗" class="headerlink" title="第二关：用Python的turtle模块绘制国旗"></a>第二关：用Python的turtle模块绘制国旗</h2><p>首先要知道什么是<a href="https://zhuanlan.zhihu.com/p/64594462">turtle模块</a>，自行点击跳转介绍。</p>
<p>简而言之，就是入门级的图形绘制函数库；</p>
<p>解决步骤如下：</p>
<p>首先，定义两个函数 draw_rectangle 和 draw_star，用于绘制矩形和五角星。然后，定义了主程序 main，该程序包括以下步骤：</p>
<ol>
<li>设置海龟(turtle)绘图速度</li>
<li>抬起画笔</li>
<li>定义国旗左下角的坐标和国旗的宽度和高度</li>
<li>绘制国旗主体</li>
<li>定义大五角星的中心坐标和半径</li>
<li>绘制大五角星</li>
<li>定义小五角星的位置</li>
<li>绘制小五角星</li>
<li>隐藏海龟 </li>
<li>显示绘图窗口</li>
</ol>
<p>程序的主要思路是根据国旗的比例关系，先绘制大五角星，然后计算出小五角星的位置，并依次绘制。最后隐藏海龟并显示绘图窗口。</p>
<h4 id="完整代码如下："><a href="#完整代码如下：" class="headerlink" title="完整代码如下："></a>完整代码如下：</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_rectangle</span>(<span class="params">x, y, width, height</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;绘制矩形&quot;&quot;&quot;</span></span><br><span class="line">    turtle.goto(x, y)</span><br><span class="line">    turtle.pencolor(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    turtle.fillcolor(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    turtle.begin_fill()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">        turtle.forward(width)</span><br><span class="line">        turtle.left(<span class="number">90</span>)</span><br><span class="line">        turtle.forward(height)</span><br><span class="line">        turtle.left(<span class="number">90</span>)</span><br><span class="line">    turtle.end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_star</span>(<span class="params">x, y, radius</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;绘制五角星&quot;&quot;&quot;</span></span><br><span class="line">    turtle.setpos(x, y)</span><br><span class="line">    pos1 = turtle.pos()</span><br><span class="line">    turtle.circle(-radius, <span class="number">72</span>)</span><br><span class="line">    pos2 = turtle.pos()</span><br><span class="line">    turtle.circle(-radius, <span class="number">72</span>)</span><br><span class="line">    pos3 = turtle.pos()</span><br><span class="line">    turtle.circle(-radius, <span class="number">72</span>)</span><br><span class="line">    pos4 = turtle.pos()</span><br><span class="line">    turtle.circle(-radius, <span class="number">72</span>)</span><br><span class="line">    pos5 = turtle.pos()</span><br><span class="line">    turtle.color(<span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">    turtle.begin_fill()</span><br><span class="line">    turtle.goto(pos3)</span><br><span class="line">    turtle.goto(pos1)</span><br><span class="line">    turtle.goto(pos4)</span><br><span class="line">    turtle.goto(pos2)</span><br><span class="line">    turtle.goto(pos5)</span><br><span class="line">    turtle.end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;主程序&quot;&quot;&quot;</span></span><br><span class="line">    turtle.speed(<span class="number">12</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    x, y = -<span class="number">270</span>, -<span class="number">180</span></span><br><span class="line">    <span class="comment"># 画国旗主体</span></span><br><span class="line">    width, height = <span class="number">540</span>, <span class="number">360</span></span><br><span class="line">    draw_rectangle(x, y, width, height)</span><br><span class="line">    <span class="comment"># 画大星星</span></span><br><span class="line">    pice = <span class="number">22</span></span><br><span class="line">    center_x, center_y = x + <span class="number">5</span> * pice, y + height - pice * <span class="number">5</span></span><br><span class="line">    turtle.goto(center_x, center_y)</span><br><span class="line">    turtle.left(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(pice * <span class="number">3</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    draw_star(turtle.xcor(), turtle.ycor(), pice * <span class="number">3</span>)</span><br><span class="line">    x_poses, y_poses = [<span class="number">10</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br><span class="line">    <span class="comment"># 画小星星</span></span><br><span class="line">    <span class="keyword">for</span> x_pos, y_pos <span class="keyword">in</span> <span class="built_in">zip</span>(x_poses, y_poses):</span><br><span class="line">        turtle.goto(x + x_pos * pice, y + height - y_pos * pice)</span><br><span class="line">        turtle.left(turtle.towards(center_x, center_y) - turtle.heading())</span><br><span class="line">        turtle.forward(pice)</span><br><span class="line">        turtle.right(<span class="number">90</span>)</span><br><span class="line">        draw_star(turtle.xcor(), turtle.ycor(), pice)</span><br><span class="line">    <span class="comment"># 隐藏海龟</span></span><br><span class="line">    turtle.ht()</span><br><span class="line">    <span class="comment"># 显示绘图窗口</span></span><br><span class="line">    turtle.mainloop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p>运行后的结果如下：</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303211750146.png" alt="image-20230303211750146"></p>
<h2 id="第三关：绘制小猪佩奇"><a href="#第三关：绘制小猪佩奇" class="headerlink" title="第三关：绘制小猪佩奇"></a>第三关：绘制小猪佩奇</h2><p>直接给出代码再解释：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">绘制小猪佩奇</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">nose</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画鼻子&quot;&quot;&quot;</span></span><br><span class="line">    penup()</span><br><span class="line">    <span class="comment"># 将海龟移动到指定的坐标</span></span><br><span class="line">    goto(x,y)</span><br><span class="line">    pendown()</span><br><span class="line">    <span class="comment"># 设置海龟的方向（0-东、90-北、180-西、270-南）</span></span><br><span class="line">    setheading(-<span class="number">30</span>)</span><br><span class="line">    begin_fill()</span><br><span class="line">    a = <span class="number">0.4</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">120</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= i &lt; <span class="number">30</span> <span class="keyword">or</span> <span class="number">60</span> &lt;= i &lt;<span class="number">90</span>:</span><br><span class="line">            a = a + <span class="number">0.08</span></span><br><span class="line">            <span class="comment"># 向左转3度</span></span><br><span class="line">            left(<span class="number">3</span>)</span><br><span class="line">            <span class="comment"># 向前走</span></span><br><span class="line">            forward(a)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a = a - <span class="number">0.08</span></span><br><span class="line">            left(<span class="number">3</span>)</span><br><span class="line">            forward(a)</span><br><span class="line">    end_fill()</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">90</span>)</span><br><span class="line">    forward(<span class="number">25</span>)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(<span class="number">10</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    <span class="comment"># 设置画笔的颜色(红, 绿, 蓝)</span></span><br><span class="line">    pencolor(<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>)</span><br><span class="line">    setheading(<span class="number">10</span>)</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">5</span>)</span><br><span class="line">    color(<span class="number">160</span>, <span class="number">82</span>, <span class="number">45</span>)</span><br><span class="line">    end_fill()</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(<span class="number">20</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    pencolor(<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>)</span><br><span class="line">    setheading(<span class="number">10</span>)</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">5</span>)</span><br><span class="line">    color(<span class="number">160</span>, <span class="number">82</span>, <span class="number">45</span>)</span><br><span class="line">    end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">head</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画头&quot;&quot;&quot;</span></span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>), <span class="string">&quot;pink&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    goto(x,y)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    setheading(<span class="number">180</span>)</span><br><span class="line">    circle(<span class="number">300</span>, -<span class="number">30</span>)</span><br><span class="line">    circle(<span class="number">100</span>, -<span class="number">60</span>)</span><br><span class="line">    circle(<span class="number">80</span>, -<span class="number">100</span>)</span><br><span class="line">    circle(<span class="number">150</span>, -<span class="number">20</span>)</span><br><span class="line">    circle(<span class="number">60</span>, -<span class="number">95</span>)</span><br><span class="line">    setheading(<span class="number">161</span>)</span><br><span class="line">    circle(-<span class="number">300</span>, <span class="number">15</span>)</span><br><span class="line">    penup()</span><br><span class="line">    goto(-<span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    setheading(-<span class="number">30</span>)</span><br><span class="line">    a = <span class="number">0.4</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span>&lt;= i &lt; <span class="number">30</span> <span class="keyword">or</span> <span class="number">60</span> &lt;= i &lt; <span class="number">90</span>:</span><br><span class="line">            a = a + <span class="number">0.08</span></span><br><span class="line">            lt(<span class="number">3</span>) <span class="comment">#向左转3度</span></span><br><span class="line">            fd(a) <span class="comment">#向前走a的步长</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a = a - <span class="number">0.08</span></span><br><span class="line">            lt(<span class="number">3</span>)</span><br><span class="line">            fd(a)</span><br><span class="line">    end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ears</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画耳朵&quot;&quot;&quot;</span></span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>), <span class="string">&quot;pink&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    goto(x, y)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    setheading(<span class="number">100</span>)</span><br><span class="line">    circle(-<span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">    circle(-<span class="number">10</span>, <span class="number">120</span>)</span><br><span class="line">    circle(-<span class="number">50</span>, <span class="number">54</span>)</span><br><span class="line">    end_fill()</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">90</span>)</span><br><span class="line">    forward(-<span class="number">12</span>)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(<span class="number">30</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    setheading(<span class="number">100</span>)</span><br><span class="line">    circle(-<span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">    circle(-<span class="number">10</span>, <span class="number">120</span>)</span><br><span class="line">    circle(-<span class="number">50</span>, <span class="number">56</span>)</span><br><span class="line">    end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">eyes</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画眼睛&quot;&quot;&quot;</span></span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">90</span>)</span><br><span class="line">    forward(-<span class="number">20</span>)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(-<span class="number">95</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">15</span>)</span><br><span class="line">    end_fill()</span><br><span class="line">    color(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">90</span>)</span><br><span class="line">    forward(<span class="number">12</span>)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(-<span class="number">3</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">3</span>)</span><br><span class="line">    end_fill()</span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    seth(<span class="number">90</span>)</span><br><span class="line">    forward(-<span class="number">25</span>)</span><br><span class="line">    seth(<span class="number">0</span>)</span><br><span class="line">    forward(<span class="number">40</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">15</span>)</span><br><span class="line">    end_fill()</span><br><span class="line">    color(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">90</span>)</span><br><span class="line">    forward(<span class="number">12</span>)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(-<span class="number">3</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">3</span>)</span><br><span class="line">    end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cheek</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画脸颊&quot;&quot;&quot;</span></span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>))</span><br><span class="line">    penup()</span><br><span class="line">    goto(x,y)</span><br><span class="line">    pendown()</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">30</span>)</span><br><span class="line">    end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mouth</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画嘴巴&quot;&quot;&quot;</span></span><br><span class="line">    color(<span class="number">239</span>, <span class="number">69</span>, <span class="number">19</span>)</span><br><span class="line">    penup()</span><br><span class="line">    goto(x, y)</span><br><span class="line">    pendown()</span><br><span class="line">    setheading(-<span class="number">80</span>)</span><br><span class="line">    circle(<span class="number">30</span>, <span class="number">40</span>)</span><br><span class="line">    circle(<span class="number">40</span>, <span class="number">80</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setting</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;设置参数&quot;&quot;&quot;</span></span><br><span class="line">    pensize(<span class="number">4</span>)</span><br><span class="line">    <span class="comment"># 隐藏海龟</span></span><br><span class="line">    hideturtle()</span><br><span class="line">    colormode(<span class="number">255</span>)</span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>), <span class="string">&quot;pink&quot;</span>)</span><br><span class="line">    setup(<span class="number">840</span>, <span class="number">500</span>)</span><br><span class="line">    speed(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;主函数&quot;&quot;&quot;</span></span><br><span class="line">    setting() </span><br><span class="line">    nose(-<span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">    head(-<span class="number">69</span>, <span class="number">167</span>)</span><br><span class="line">    ears(<span class="number">0</span>, <span class="number">160</span>)</span><br><span class="line">    eyes(<span class="number">0</span>, <span class="number">140</span>)</span><br><span class="line">    cheek(<span class="number">80</span>, <span class="number">10</span>)</span><br><span class="line">    mouth(-<span class="number">20</span>, <span class="number">30</span>)</span><br><span class="line">    done()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这是一个使用Python的turtle模块绘制小猪佩奇的程序。程序首先定义了一系列函数来绘制小猪佩奇的不同部分，例如头、鼻子、耳朵、眼睛、脸颊和嘴巴。然后，在主函数中，调用这些函数来绘制小猪佩奇的完整形象。</p>
<p>以下是程序中各个函数的作用：</p>
<ul>
<li>nose(x,y)：绘制小猪佩奇的鼻子部分。</li>
<li>head(x,y)：绘制小猪佩奇的头部。</li>
<li>ears(x,y)：绘制小猪佩奇的耳朵部分。</li>
<li>eyes(x,y)：绘制小猪佩奇的眼睛部分。</li>
<li>cheek(x,y)：绘制小猪佩奇的脸颊部分。</li>
<li>mouth(x,y)：绘制小猪佩奇的嘴巴部分。</li>
<li>setting()：设置绘制小猪佩奇所需要的参数，例如画笔大小、颜色模式、窗口大小和速度等。</li>
<li>main()：调用各个函数来绘制小猪佩奇的完整形象。</li>
</ul>
<p>最后，调用done()函数来保持图形窗口不关闭，以便观察绘制的结果。</p>
<p>这是运行后的结果：</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303211804692.png" alt="image-20230303211804692"></p>
<h1 id="Python100天—第二天"><a href="#Python100天—第二天" class="headerlink" title="Python100天—第二天"></a>Python100天—第二天</h1><p>邓小龙 2023.3.2</p>
<h2 id="第一关：将华氏温度转换为摄氏温度"><a href="#第一关：将华氏温度转换为摄氏温度" class="headerlink" title="第一关：将华氏温度转换为摄氏温度"></a>第一关：将华氏温度转换为摄氏温度</h2><p><strong>相关知识:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">摄氏度 = (华氏度 - 32) / 1.8</span><br></pre></td></tr></table></figure>

<p>那就很简单了：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入华氏温度: &#x27;</span>))</span><br><span class="line">c = (f - <span class="number">32</span>) / <span class="number">1.8</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%.1f华氏度 = %.1f摄氏度&#x27;</span> % (f, c))</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303212440836.png" alt="image-20230303212440836"></p>
<h2 id="第二关：输入半径计算圆的周长和面积"><a href="#第二关：输入半径计算圆的周长和面积" class="headerlink" title="第二关：输入半径计算圆的周长和面积"></a>第二关：输入半径计算圆的周长和面积</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">radius = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入圆的半径: &#x27;</span>))</span><br><span class="line">perimeter = <span class="number">2</span> * math.pi * radius</span><br><span class="line">area = math.pi * radius * radius</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;周长: %.2f&#x27;</span> % perimeter)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;面积: %.2f&#x27;</span> % area)</span><br></pre></td></tr></table></figure>

<p>具体解释如下：</p>
<ol>
<li><code>import math</code>：导入 Python 内置的数学库 math，以便使用其中的圆周率和数学函数。</li>
<li><code>radius = float(input(&#39;请输入圆的半径: &#39;))</code>：使用 <code>input()</code> 函数接收用户输入的半径值，并使用 <code>float()</code> 函数将其转换为浮点数类型，并将其赋值给变量 <code>radius</code>。</li>
<li><code>perimeter = 2 * math.pi * radius</code>：根据圆的周长公式 <code>C = 2πr</code>，计算圆的周长，其中 <code>math.pi</code> 表示圆周率，<code>radius</code> 表示半径，计算结果赋值给变量 <code>perimeter</code>。</li>
<li><code>area = math.pi * radius * radius</code>：根据圆的面积公式 <code>A = πr²</code>，计算圆的面积，其中 <code>math.pi</code> 表示圆周率，<code>radius</code> 表示半径，计算结果赋值给变量 <code>area</code>。</li>
<li><code>print(&#39;周长: %.2f&#39; % perimeter)</code>：使用字符串格式化输出圆的周长，其中 <code>%</code> 是字符串格式化运算符，<code>&#39;周长: %.2f&#39;</code> 是输出的字符串格式，其中 <code>.2f</code> 表示输出的浮点数保留两位小数，<code>perimeter</code> 表示输出的值。</li>
<li><code>print(&#39;面积: %.2f&#39; % area)</code>：使用字符串格式化输出圆的面积，其中 <code>%</code> 是字符串格式化运算符，<code>&#39;面积: %.2f&#39;</code> 是输出的字符串格式，其中 <code>.2f</code> 表示输出的浮点数保留两位小数，<code>area</code> 表示输出的值。</li>
</ol>
<p>最终运行程序，用户输入圆的半径后，程序将自动计算圆的周长和面积，并输出结果。</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303213230525.png" alt="image-20230303213230525"></p>
<h2 id="第三关：输入年份-如果是闰年输出True-否则输出False"><a href="#第三关：输入年份-如果是闰年输出True-否则输出False" class="headerlink" title="第三关：输入年份 如果是闰年输出True 否则输出False"></a>第三关：输入年份 如果是闰年输出True 否则输出False</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">year = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入年份: &#x27;</span>))</span><br><span class="line"><span class="comment"># 如果代码太长写成一行不便于阅读 可以使用\或()折行</span></span><br><span class="line">is_leap = (year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span></span><br><span class="line">           year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(is_leap)</span><br></pre></td></tr></table></figure>

<p>具体解释如下：</p>
<ol>
<li><code>year = int(input(&#39;请输入年份: &#39;))</code>：使用 <code>input()</code> 函数接收用户输入的年份，并使用 <code>int()</code> 函数将其转换为整数类型，并将其赋值给变量 <code>year</code>。</li>
<li><code>is_leap = (year % 4 == 0 and year % 100 != 0 or year % 400 == 0)</code>：根据闰年的定义，如果一个年份是 4 的倍数但不是 100 的倍数，或者是 400 的倍数，就是闰年。本代码使用一个表达式判断输入的年份是否为闰年，该表达式使用了逻辑运算符 <code>and</code> 和 <code>or</code>，其中 <code>and</code> 表示两个条件都要满足才为真，<code>or</code> 表示其中一个条件满足就为真。表达式的结果为布尔值，即 True 或 False，然后将其赋值给变量 <code>is_leap</code>。</li>
<li><code>print(is_leap)</code>：使用 <code>print()</code> 函数输出变量 <code>is_leap</code> 的值，即输入的年份是否为闰年。</li>
</ol>
<p>最终运行程序，用户输入年份后，程序将自动判断该年份是否为闰年，并输出结果。</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303213617270.png" alt="image-20230303213617270"></p>
<h2 id="第四关：运算符的使用"><a href="#第四关：运算符的使用" class="headerlink" title="第四关：运算符的使用"></a>第四关：运算符的使用</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">5</span></span><br><span class="line">b = <span class="number">10</span></span><br><span class="line">c = <span class="number">3</span></span><br><span class="line">d = <span class="number">4</span></span><br><span class="line">e = <span class="number">5</span></span><br><span class="line">a += b</span><br><span class="line">a -= c</span><br><span class="line">a *= d</span><br><span class="line">a /= e</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a = &quot;</span>, a)</span><br><span class="line"></span><br><span class="line">flag1 = <span class="number">3</span> &gt; <span class="number">2</span></span><br><span class="line">flag2 = <span class="number">2</span> &lt; <span class="number">1</span></span><br><span class="line">flag3 = flag1 <span class="keyword">and</span> flag2</span><br><span class="line">flag4 = flag1 <span class="keyword">or</span> flag2</span><br><span class="line">flag5 = <span class="keyword">not</span> flag1</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag1 = &quot;</span>, flag1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag2 = &quot;</span>, flag2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag3 = &quot;</span>, flag3)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag4 = &quot;</span>, flag4)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag5 = &quot;</span>, flag5)</span><br><span class="line"><span class="built_in">print</span>(flag1 <span class="keyword">is</span> <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(flag2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<p>太简单，不解释</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303213856173.png" alt="image-20230303213856173"></p>
<h2 id="第五关：字符串常用操作"><a href="#第五关：字符串常用操作" class="headerlink" title="第五关：字符串常用操作"></a>第五关：字符串常用操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&#x27;hello, world!&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串的长度是:&#x27;</span>, <span class="built_in">len</span>(str1))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;单词首字母大写: &#x27;</span>, str1.title())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串变大写: &#x27;</span>, str1.upper())</span><br><span class="line"><span class="comment"># str1 = str1.upper()</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串是不是大写: &#x27;</span>, str1.isupper())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串是不是以hello开头: &#x27;</span>, str1.startswith(<span class="string">&#x27;hello&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串是不是以hello结尾: &#x27;</span>, str1.endswith(<span class="string">&#x27;hello&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串是不是以感叹号开头: &#x27;</span>, str1.startswith(<span class="string">&#x27;!&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串是不是一感叹号结尾: &#x27;</span>, str1.endswith(<span class="string">&#x27;!&#x27;</span>))</span><br><span class="line">str2 = <span class="string">&#x27;- \u9a86\u660a&#x27;</span></span><br><span class="line">str3 = str1.title() + <span class="string">&#x27; &#x27;</span> + str2.lower()</span><br><span class="line"><span class="built_in">print</span>(str3)</span><br></pre></td></tr></table></figure>

<p>具体解释如下：</p>
<ol>
<li><code>str1 = &#39;hello, world!&#39;</code>：将字符串 <code>&#39;hello, world!&#39;</code> 赋值给变量 <code>str1</code>。</li>
<li><code>print(&#39;字符串的长度是:&#39;, len(str1))</code>：使用 <code>len()</code> 函数计算字符串 <code>str1</code> 的长度，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;单词首字母大写: &#39;, str1.title())</code>：使用 <code>title()</code> 方法将字符串中每个单词的首字母大写，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串变大写: &#39;, str1.upper())</code>：使用 <code>upper()</code> 方法将字符串中所有字符变为大写，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串是不是大写: &#39;, str1.isupper())</code>：使用 <code>isupper()</code> 方法判断字符串中所有字符是否都是大写字母，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串是不是以hello开头: &#39;, str1.startswith(&#39;hello&#39;))</code>：使用 <code>startswith()</code> 方法判断字符串是否以指定的子字符串 <code>&#39;hello&#39;</code> 开头，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串是不是以hello结尾: &#39;, str1.endswith(&#39;hello&#39;))</code>：使用 <code>endswith()</code> 方法判断字符串是否以指定的子字符串 <code>&#39;hello&#39;</code> 结尾，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串是不是以感叹号开头: &#39;, str1.startswith(&#39;!&#39;))</code>：使用 <code>startswith()</code> 方法判断字符串是否以指定的字符 <code>&#39;!&#39;</code> 开头，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串是不是一感叹号结尾: &#39;, str1.endswith(&#39;!&#39;))</code>：使用 <code>endswith()</code> 方法判断字符串是否以指定的字符 <code>&#39;!&#39;</code> 结尾，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>str2 = &#39;- \U9a86\U660a&#39;</code>：将字符串 <code>&#39;- \U9a86\U660a&#39;</code> 赋值给变量 <code>str2</code>，其中 <code>\U9a86\U660a</code> 是 Unicode 字符编码，表示中文姓名“骆昊”。</li>
<li><code>str3 = str1.title() + &#39; &#39; + str2.lower()</code>：将字符串 <code>str1</code> 使用 <code>title()</code> 方法转换为每个单词首字母大写的形式，然后将其与字符串 <code>str2</code> 全部转换为小写形式拼接起来，赋值给变量 <code>str3</code>。</li>
<li><code>print(str3)</code>：使用 <code>print()</code> 函数输出变量 <code>str3</code> 的值。</li>
</ol>
<p>最终运行程序，将依次输出字符串的长度、单词首字母大写的形式、字符串全部大写的形式、字符串是否全部大写、字符串是否以指定的子字符串开头或结尾、拼接后的字符串。</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303214500244.png" alt="image-20230303214500244"></p>
<h2 id="第六关：使用变量保存数据并进行操作"><a href="#第六关：使用变量保存数据并进行操作" class="headerlink" title="第六关：使用变量保存数据并进行操作"></a>第六关：使用变量保存数据并进行操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">321</span></span><br><span class="line">b = <span class="number">123</span></span><br><span class="line"><span class="built_in">print</span>(a + b)</span><br><span class="line"><span class="built_in">print</span>(a - b)</span><br><span class="line"><span class="built_in">print</span>(a * b)</span><br><span class="line"><span class="built_in">print</span>(a / b)</span><br><span class="line"><span class="built_in">print</span>(a // b)</span><br><span class="line"><span class="built_in">print</span>(a % b)</span><br><span class="line"><span class="built_in">print</span>(a ** b)</span><br></pre></td></tr></table></figure>

<p>这段代码定义了两个整型变量a和b，分别赋值为321和123。然后分别进行了加、减、乘、除、整除、取余和幂运算，并将结果打印出来。</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303215247452.png" alt="image-20230303215247452"></p>
<h1 id="Python100天—第三天"><a href="#Python100天—第三天" class="headerlink" title="Python100天—第三天"></a>Python100天—第三天</h1><p>邓小龙 2023.3.4</p>
<h2 id="第一关：英制单位英寸和公制单位厘米互换"><a href="#第一关：英制单位英寸和公制单位厘米互换" class="headerlink" title="第一关：英制单位英寸和公制单位厘米互换"></a>第一关：英制单位英寸和公制单位厘米互换</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">value = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入长度: &#x27;</span>))</span><br><span class="line">unit = <span class="built_in">input</span>(<span class="string">&#x27;请输入单位: &#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> unit == <span class="string">&#x27;in&#x27;</span> <span class="keyword">or</span> unit == <span class="string">&#x27;英寸&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%f英寸 = %f厘米&#x27;</span> % (value, value * <span class="number">2.54</span>))</span><br><span class="line"><span class="keyword">elif</span> unit == <span class="string">&#x27;cm&#x27;</span> <span class="keyword">or</span> unit == <span class="string">&#x27;厘米&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%f厘米 = %f英寸&#x27;</span> % (value, value / <span class="number">2.54</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请输入有效的单位&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314162910415.png" alt="image-20230314162910415"></p>
<h2 id="第二关：百分制成绩转等级制成绩"><a href="#第二关：百分制成绩转等级制成绩" class="headerlink" title="第二关：百分制成绩转等级制成绩"></a>第二关：百分制成绩转等级制成绩</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">score = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入成绩: &#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> score &gt;= <span class="number">90</span>:</span><br><span class="line">    grade = <span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">80</span>:</span><br><span class="line">    grade = <span class="string">&#x27;B&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">70</span>:</span><br><span class="line">    grade = <span class="string">&#x27;C&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">60</span>:</span><br><span class="line">    grade = <span class="string">&#x27;D&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    grade = <span class="string">&#x27;E&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;对应的等级是:&#x27;</span>, grade)</span><br></pre></td></tr></table></figure>

<p><img src="C:/Users/dengxiaolong/AppData/Roaming/Typora/typora-user-images/image-20230314162835173.png" alt="image-20230314162835173"></p>
<h2 id="第三关：分段函数求值"><a href="#第三关：分段函数求值" class="headerlink" title="第三关：分段函数求值"></a>第三关：分段函数求值</h2><p>题目：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">        3x - 5  (x &gt; 1)</span><br><span class="line">f(x) =  x + 2   (-1 &lt;= x &lt;= 1)</span><br><span class="line">        5x + 3  (x &lt; -1)</span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;x = &#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> x &gt; <span class="number">1</span>:</span><br><span class="line">    y = <span class="number">3</span> * x - <span class="number">5</span></span><br><span class="line"><span class="keyword">elif</span> x &gt;= -<span class="number">1</span>:</span><br><span class="line">    y = x + <span class="number">2</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    y = <span class="number">5</span> * x + <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;f(%.2f) = %.2f&#x27;</span> % (x, y))</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314162824584.png" alt="image-20230314162824584"></p>
<h2 id="第四关：掷骰子决定做什么事情"><a href="#第四关：掷骰子决定做什么事情" class="headerlink" title="第四关：掷骰子决定做什么事情"></a>第四关：掷骰子决定做什么事情</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line">face = randint(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line"><span class="keyword">if</span> face == <span class="number">1</span>:</span><br><span class="line">    result = <span class="string">&#x27;唱首歌&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> face == <span class="number">2</span>:</span><br><span class="line">    result = <span class="string">&#x27;跳个舞&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> face == <span class="number">3</span>:</span><br><span class="line">    result = <span class="string">&#x27;学狗叫&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> face == <span class="number">4</span>:</span><br><span class="line">    result = <span class="string">&#x27;做俯卧撑&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> face == <span class="number">5</span>:</span><br><span class="line">    result = <span class="string">&#x27;念绕口令&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    result = <span class="string">&#x27;讲冷笑话&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314162807152.png" alt="image-20230314162807152"></p>
<h2 id="第五关：输入月收入和五险一金计算个人所得税"><a href="#第五关：输入月收入和五险一金计算个人所得税" class="headerlink" title="第五关：输入月收入和五险一金计算个人所得税"></a>第五关：输入月收入和五险一金计算个人所得税</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">说明：写这段代码时新的个人所得税计算方式还没有颁布</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">salary = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;本月收入: &#x27;</span>))</span><br><span class="line">insurance = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;五险一金: &#x27;</span>))</span><br><span class="line">diff = salary - insurance - <span class="number">3500</span></span><br><span class="line"><span class="keyword">if</span> diff &lt;= <span class="number">0</span>:</span><br><span class="line">    rate = <span class="number">0</span></span><br><span class="line">    deduction = <span class="number">0</span></span><br><span class="line"><span class="keyword">elif</span> diff &lt; <span class="number">1500</span>:</span><br><span class="line">    rate = <span class="number">0.03</span></span><br><span class="line">    deduction = <span class="number">0</span></span><br><span class="line"><span class="keyword">elif</span> diff &lt; <span class="number">4500</span>:</span><br><span class="line">    rate = <span class="number">0.1</span></span><br><span class="line">    deduction = <span class="number">105</span></span><br><span class="line"><span class="keyword">elif</span> diff &lt; <span class="number">9000</span>:</span><br><span class="line">    rate = <span class="number">0.2</span></span><br><span class="line">    deduction = <span class="number">555</span></span><br><span class="line"><span class="keyword">elif</span> diff &lt; <span class="number">35000</span>:</span><br><span class="line">    rate = <span class="number">0.25</span></span><br><span class="line">    deduction = <span class="number">1005</span></span><br><span class="line"><span class="keyword">elif</span> diff &lt; <span class="number">55000</span>:</span><br><span class="line">    rate = <span class="number">0.3</span></span><br><span class="line">    deduction = <span class="number">2755</span></span><br><span class="line"><span class="keyword">elif</span> diff &lt; <span class="number">80000</span>:</span><br><span class="line">    rate = <span class="number">0.35</span></span><br><span class="line">    deduction = <span class="number">5505</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    rate = <span class="number">0.45</span></span><br><span class="line">    deduction = <span class="number">13505</span></span><br><span class="line">tax = <span class="built_in">abs</span>(diff * rate - deduction)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;个人所得税: ￥%.2f元&#x27;</span> % tax)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;实际到手收入: ￥%.2f元&#x27;</span> % (diff + <span class="number">3500</span> - tax))</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314162754199.png" alt="image-20230314162754199"></p>
<h2 id="第六关：判断输入的边长能否构成三角形，如果能则计算出三角形的周长和面积"><a href="#第六关：判断输入的边长能否构成三角形，如果能则计算出三角形的周长和面积" class="headerlink" title="第六关：判断输入的边长能否构成三角形，如果能则计算出三角形的周长和面积"></a>第六关：判断输入的边长能否构成三角形，如果能则计算出三角形的周长和面积</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">a = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;a = &#x27;</span>))</span><br><span class="line">b = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;b = &#x27;</span>))</span><br><span class="line">c = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;c = &#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> a + b &gt; c <span class="keyword">and</span> a + c &gt; b <span class="keyword">and</span> b + c &gt; a:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;周长: %f&#x27;</span> % (a + b + c))</span><br><span class="line">    p = (a + b + c) / <span class="number">2</span></span><br><span class="line">    area = math.sqrt(p * (p - a) * (p - b) * (p - c))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;面积: %f&#x27;</span> % (area))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;不能构成三角形&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314162732236.png" alt="image-20230314162732236"></p>
<h2 id="第七关：用户身份验证"><a href="#第七关：用户身份验证" class="headerlink" title="第七关：用户身份验证"></a>第七关：用户身份验证</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">username = <span class="built_in">input</span>(<span class="string">&#x27;请输入用户名: &#x27;</span>)</span><br><span class="line">password = <span class="built_in">input</span>(<span class="string">&#x27;请输入口令: &#x27;</span>)</span><br><span class="line"><span class="comment"># 输入口令的时候终端中没有回显</span></span><br><span class="line"><span class="comment"># password = getpass.getpass(&#x27;请输入口令: &#x27;)</span></span><br><span class="line"><span class="keyword">if</span> username == <span class="string">&#x27;admin&#x27;</span> <span class="keyword">and</span> password == <span class="string">&#x27;123456&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;身份验证成功!&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;身份验证失败!&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314163138996.png" alt="image-20230314163138996"></p>
<h1 id="Python100天—第四天"><a href="#Python100天—第四天" class="headerlink" title="Python100天—第四天"></a>Python100天—第四天</h1><p>邓小龙 2023.3.5</p>
<h2 id="第一关：用for循环实现1-100求和"><a href="#第一关：用for循环实现1-100求和" class="headerlink" title="第一关：用for循环实现1~100求和"></a>第一关：用for循环实现1~100求和</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>):</span><br><span class="line">    <span class="built_in">sum</span> += x</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314163529217.png" alt="image-20230314163529217"></p>
<h2 id="第二关：用for循环实现1-100之间的偶数求和"><a href="#第二关：用for循环实现1-100之间的偶数求和" class="headerlink" title="第二关：用for循环实现1~100之间的偶数求和"></a>第二关：用for循环实现1~100之间的偶数求和</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">101</span>, <span class="number">2</span>):</span><br><span class="line">    <span class="built_in">sum</span> += x</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314163635418.png" alt="image-20230314163635418"></p>
<h2 id="第三关：输入非负整数n计算n"><a href="#第三关：输入非负整数n计算n" class="headerlink" title="第三关：输入非负整数n计算n!"></a>第三关：输入非负整数n计算n!</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;n = &#x27;</span>))</span><br><span class="line">result = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">    result *= x</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d! = %d&#x27;</span> % (n, result))</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314163741306.png" alt="image-20230314163741306"></p>
<h2 id="第四关：输入一个正整数判断它是不是素数"><a href="#第四关：输入一个正整数判断它是不是素数" class="headerlink" title="第四关：输入一个正整数判断它是不是素数"></a>第四关：输入一个正整数判断它是不是素数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line">num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个正整数: &#x27;</span>))</span><br><span class="line">end = <span class="built_in">int</span>(sqrt(num))</span><br><span class="line">is_prime = <span class="literal">True</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, end + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> num % x == <span class="number">0</span>:</span><br><span class="line">        is_prime = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> is_prime <span class="keyword">and</span> num != <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%d是素数&#x27;</span> % num)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%d不是素数&#x27;</span> % num)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314163900539.png" alt="image-20230314163900539"></p>
<h2 id="第五关：输入两个正整数计算最大公约数和最小公倍数"><a href="#第五关：输入两个正整数计算最大公约数和最小公倍数" class="headerlink" title="第五关：输入两个正整数计算最大公约数和最小公倍数"></a>第五关：输入两个正整数计算最大公约数和最小公倍数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;x = &#x27;</span>))</span><br><span class="line">y = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;y = &#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> x &gt; y:</span><br><span class="line">    (x, y) = (y, x)</span><br><span class="line"><span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(x, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> x % factor == <span class="number">0</span> <span class="keyword">and</span> y % factor == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%d和%d的最大公约数是%d&#x27;</span> % (x, y, factor))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%d和%d的最小公倍数是%d&#x27;</span> % (x, y, x * y // factor))</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314164039874.png" alt="image-20230314164039874"></p>
<h2 id="第六关：打印各种三角形图案"><a href="#第六关：打印各种三角形图案" class="headerlink" title="第六关：打印各种三角形图案"></a>第六关：打印各种三角形图案</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">    *</span><br><span class="line">   **</span><br><span class="line">  ***</span><br><span class="line"> ****</span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">    *</span><br><span class="line">   ***</span><br><span class="line">  *****</span><br><span class="line"> *******</span><br><span class="line">*********</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">row = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入行数: &#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;*&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">        <span class="keyword">if</span> j &lt; row - i - <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27; &#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;*&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(row - i - <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27; &#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span> * i + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;*&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314164311506.png" alt="image-20230314164311506"></p>
<h2 id="第七关：用while循环实现1-100求和"><a href="#第七关：用while循环实现1-100求和" class="headerlink" title="第七关：用while循环实现1~100求和"></a>第七关：用while循环实现1~100求和</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">num = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> num &lt;= <span class="number">100</span>:</span><br><span class="line">    <span class="built_in">sum</span> += num</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314164440577.png" alt="image-20230314164440577"></p>
<h2 id="第八关：用while循环实现1-100之间的偶数求和"><a href="#第八关：用while循环实现1-100之间的偶数求和" class="headerlink" title="第八关：用while循环实现1~100之间的偶数求和"></a>第八关：用while循环实现1~100之间的偶数求和</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sum</span>, num = <span class="number">0</span>, <span class="number">2</span></span><br><span class="line"><span class="keyword">while</span> num &lt;= <span class="number">100</span>:</span><br><span class="line">    <span class="built_in">sum</span> += num</span><br><span class="line">    num += <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314164623233.png" alt="image-20230314164623233"></p>
<h1 id="Python100天—第五天"><a href="#Python100天—第五天" class="headerlink" title="Python100天—第五天"></a>Python100天—第五天</h1><p>邓小龙 2023.3.6</p>
<h2 id="求解《百钱百鸡》问题"><a href="#求解《百钱百鸡》问题" class="headerlink" title="求解《百钱百鸡》问题"></a>求解《百钱百鸡》问题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1只公鸡5元 1只母鸡3元 3只小鸡1元 用100元买100只鸡</span><br><span class="line">问公鸡 母鸡 小鸡各有多少只</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">33</span>):</span><br><span class="line">        z = <span class="number">100</span> - x - y</span><br><span class="line">        <span class="keyword">if</span> <span class="number">5</span> * x + <span class="number">3</span> * y + z / <span class="number">3</span> == <span class="number">100</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;公鸡: %d只, 母鸡: %d只, 小鸡: %d只&#x27;</span> % (x, y, z))</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314165906654.png" alt="image-20230314165906654"></p>
<h2 id="Craps赌博游戏"><a href="#Craps赌博游戏" class="headerlink" title="Craps赌博游戏"></a>Craps赌博游戏</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">玩家摇两颗色子 如果第一次摇出7点或11点 玩家胜</span><br><span class="line">如果摇出2点 3点 12点 庄家胜 其他情况游戏继续</span><br><span class="line">玩家再次要色子 如果摇出7点 庄家胜</span><br><span class="line">如果摇出第一次摇的点数 玩家胜</span><br><span class="line">否则游戏继续 玩家继续摇色子</span><br><span class="line">玩家进入游戏时有1000元的赌注 全部输光游戏结束</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line">money = <span class="number">1000</span></span><br><span class="line"><span class="keyword">while</span> money &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;你的总资产为:&#x27;</span>, money)</span><br><span class="line">    needs_go_on = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        debt = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请下注: &#x27;</span>))</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt; debt &lt;= money:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    first = randint(<span class="number">1</span>, <span class="number">6</span>) + randint(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;玩家摇出了%d点&#x27;</span> % first)</span><br><span class="line">    <span class="keyword">if</span> first == <span class="number">7</span> <span class="keyword">or</span> first == <span class="number">11</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;玩家胜!&#x27;</span>)</span><br><span class="line">        money += debt</span><br><span class="line">    <span class="keyword">elif</span> first == <span class="number">2</span> <span class="keyword">or</span> first == <span class="number">3</span> <span class="keyword">or</span> first == <span class="number">12</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;庄家胜!&#x27;</span>)</span><br><span class="line">        money -= debt</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        needs_go_on = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> needs_go_on:</span><br><span class="line">        current = randint(<span class="number">1</span>, <span class="number">6</span>) + randint(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;玩家摇出了%d点&#x27;</span> % current)</span><br><span class="line">        <span class="keyword">if</span> current == <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;庄家胜&#x27;</span>)</span><br><span class="line">            money -= debt</span><br><span class="line">            needs_go_on = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">elif</span> current == first:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;玩家胜&#x27;</span>)</span><br><span class="line">            money += debt</span><br><span class="line">            needs_go_on = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你破产了, 游戏结束!&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314170030495.png" alt="image-20230314170030495"></p>
<h2 id="输出斐波那契数列的前20个数"><a href="#输出斐波那契数列的前20个数" class="headerlink" title="输出斐波那契数列的前20个数"></a>输出斐波那契数列的前20个数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 1 2 3 5 8 13 21 ...</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">0</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    a, b = b, a + b</span><br><span class="line">    <span class="built_in">print</span>(a, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314170150986.png" alt="image-20230314170150986"></p>
<h2 id="猜数字游戏"><a href="#猜数字游戏" class="headerlink" title="猜数字游戏"></a>猜数字游戏</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">计算机出一个1~100之间的随机数由人来猜</span><br><span class="line">计算机根据人猜的数字分别给出提示大一点/小一点/猜对了</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">answer = random.randint(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line">counter = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    counter += <span class="number">1</span></span><br><span class="line">    number = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入: &#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> number &lt; answer:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;大一点&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> number &gt; answer:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;小一点&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;恭喜你猜对了!&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你总共猜了%d次&#x27;</span> % counter)</span><br><span class="line"><span class="keyword">if</span> counter &gt; <span class="number">7</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;你的智商余额明显不足&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314170332438.png" alt="image-20230314170332438"></p>
<h2 id="找出100-999之间的所有水仙花数"><a href="#找出100-999之间的所有水仙花数" class="headerlink" title="找出100~999之间的所有水仙花数"></a>找出100~999之间的所有水仙花数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">水仙花数是各位立方和等于这个数本身的数</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>, <span class="number">1000</span>):</span><br><span class="line">    low = num % <span class="number">10</span></span><br><span class="line">    mid = num // <span class="number">10</span> % <span class="number">10</span></span><br><span class="line">    high = num // <span class="number">100</span></span><br><span class="line">    <span class="keyword">if</span> num == low ** <span class="number">3</span> + mid ** <span class="number">3</span> + high ** <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">print</span>(num)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314170423462.png" alt="image-20230314170423462"></p>
<h2 id="判断输入的正整数是不是回文数"><a href="#判断输入的正整数是不是回文数" class="headerlink" title="判断输入的正整数是不是回文数"></a>判断输入的正整数是不是回文数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">回文数是指将一个正整数从左往右排列和从右往左排列值一样的数</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个正整数: &#x27;</span>))</span><br><span class="line">temp = num</span><br><span class="line">num2 = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> temp &gt; <span class="number">0</span>:</span><br><span class="line">    num2 *= <span class="number">10</span></span><br><span class="line">    num2 += temp % <span class="number">10</span></span><br><span class="line">    temp //= <span class="number">10</span></span><br><span class="line"><span class="keyword">if</span> num == num2:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%d是回文数&#x27;</span> % num)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%d不是回文数&#x27;</span> % num)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314170510238.png" alt="image-20230314170510238"></p>
<h2 id="找出1-9999之间的所有完美数"><a href="#找出1-9999之间的所有完美数" class="headerlink" title="找出1~9999之间的所有完美数"></a>找出1~9999之间的所有完美数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">完美数是除自身外其他所有因子的和正好等于这个数本身的数</span><br><span class="line">例如: 6 = 1 + 2 + 3, 28 = 1 + 2 + 4 + 7 + 14</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10000</span>):</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">int</span>(math.sqrt(num)) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> num % factor == <span class="number">0</span>:</span><br><span class="line">            result += factor</span><br><span class="line">            <span class="keyword">if</span> factor &gt; <span class="number">1</span> <span class="keyword">and</span> num // factor != factor:</span><br><span class="line">                result += num // factor</span><br><span class="line">    <span class="keyword">if</span> result == num:</span><br><span class="line">        <span class="built_in">print</span>(num)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314170827752.png" alt="image-20230314170827752"></p>
<h2 id="输出2-99之间的素数"><a href="#输出2-99之间的素数" class="headerlink" title="输出2~99之间的素数"></a>输出2~99之间的素数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">100</span>):</span><br><span class="line">    is_prime = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(math.sqrt(num)) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> num % factor == <span class="number">0</span>:</span><br><span class="line">            is_prime = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> is_prime:</span><br><span class="line">        <span class="built_in">print</span>(num, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314170923301.png" alt="image-20230314170923301"></p>
<h2 id="输出乘法口诀表-九九表"><a href="#输出乘法口诀表-九九表" class="headerlink" title="输出乘法口诀表(九九表)"></a>输出乘法口诀表(九九表)</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%d*%d=%d&#x27;</span> % (i, j, i * j), end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314170957126.png" alt="image-20230314170957126"></p>
<h1 id="Python100天—第六天"><a href="#Python100天—第六天" class="headerlink" title="Python100天—第六天"></a>Python100天—第六天</h1><p>邓小龙 2023.3.7</p>
<h2 id="函数的定义和使用-计算组合数C-7-3"><a href="#函数的定义和使用-计算组合数C-7-3" class="headerlink" title="函数的定义和使用 - 计算组合数C(7,3)"></a>函数的定义和使用 - 计算组合数C(7,3)</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将求阶乘的功能封装成一个函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">factorial</span>(<span class="params">n</span>):</span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">        result *= num</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(factorial(<span class="number">7</span>) // factorial(<span class="number">3</span>) // factorial(<span class="number">4</span>))</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314172803658.png" alt="image-20230314172803658"></p>
<h2 id="函数的定义和使用-求最大公约数和最小公倍数"><a href="#函数的定义和使用-求最大公约数和最小公倍数" class="headerlink" title="函数的定义和使用 - 求最大公约数和最小公倍数"></a>函数的定义和使用 - 求最大公约数和最小公倍数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">gcd</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">if</span> x &gt; y:</span><br><span class="line">        (x, y) = (y, x)</span><br><span class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(x, <span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> x % factor == <span class="number">0</span> <span class="keyword">and</span> y % factor == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> factor</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lcm</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> x * y // gcd(x, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(gcd(<span class="number">15</span>, <span class="number">27</span>))</span><br><span class="line"><span class="built_in">print</span>(lcm(<span class="number">15</span>, <span class="number">27</span>))</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314182506649.png" alt="image-20230314182506649"></p>
<h2 id="Python的内置函数"><a href="#Python的内置函数" class="headerlink" title="Python的内置函数"></a>Python的内置函数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 数学相关: abs / divmod / pow / round / min / max / sum</span><br><span class="line">- 序列相关: len / range / next / filter / map / sorted / slice / reversed</span><br><span class="line">- 类型转换: chr / ord / str / bool / int / float / complex / bin / oct / hex</span><br><span class="line">- 数据结构: dict / list / set / tuple</span><br><span class="line">- 其他函数: all / any / id / input / open / print / type</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfilter</span>(<span class="params">mystr</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(mystr) == <span class="number">6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># help()</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="number">0x9a86</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(<span class="built_in">ord</span>(<span class="string">&#x27;骆&#x27;</span>)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">abs</span>(-<span class="number">1.2345</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">round</span>(-<span class="number">1.2345</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">pow</span>(<span class="number">1.2345</span>, <span class="number">5</span>))</span><br><span class="line">fruits = [<span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;peach&#x27;</span>, <span class="string">&#x27;durian&#x27;</span>, <span class="string">&#x27;watermelon&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(fruits[<span class="built_in">slice</span>(<span class="number">1</span>, <span class="number">3</span>)])</span><br><span class="line">fruits2 = <span class="built_in">list</span>(<span class="built_in">filter</span>(myfilter, fruits))</span><br><span class="line"><span class="built_in">print</span>(fruits)</span><br><span class="line"><span class="built_in">print</span>(fruits2)</span><br></pre></td></tr></table></figure>

<h2 id="Python常用模块"><a href="#Python常用模块" class="headerlink" title="Python常用模块"></a>Python常用模块</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 运行时服务相关模块: copy / pickle / sys / ...</span><br><span class="line">- 数学相关模块: decimal / math / random / ...</span><br><span class="line">- 字符串处理模块: codecs / re / ...</span><br><span class="line">- 文件处理相关模块: shutil / gzip / ...</span><br><span class="line">- 操作系统服务相关模块: datetime / os / time / logging / io / ...</span><br><span class="line">- 进程和线程相关模块: multiprocessing / threading / queue</span><br><span class="line">- 网络应用相关模块: ftplib / http / smtplib / urllib / ...</span><br><span class="line">- Web编程相关模块: cgi / webbrowser</span><br><span class="line">- 数据处理和编码模块: base64 / csv / html.parser / json / xml / ...</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">seconds = time.time()</span><br><span class="line"><span class="built_in">print</span>(seconds)</span><br><span class="line">localtime = time.localtime(seconds)</span><br><span class="line"><span class="built_in">print</span>(localtime)</span><br><span class="line"><span class="built_in">print</span>(localtime.tm_year)</span><br><span class="line"><span class="built_in">print</span>(localtime.tm_mon)</span><br><span class="line"><span class="built_in">print</span>(localtime.tm_mday)</span><br><span class="line">asctime = time.asctime(localtime)</span><br><span class="line"><span class="built_in">print</span>(asctime)</span><br><span class="line">strtime = time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>, localtime)</span><br><span class="line"><span class="built_in">print</span>(strtime)</span><br><span class="line">mydate = time.strptime(<span class="string">&#x27;2023-3-7&#x27;</span>, <span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(mydate)</span><br><span class="line"></span><br><span class="line">shutil.copy(<span class="string">&#x27;/Users/Hao/hello.py&#x27;</span>, <span class="string">&#x27;/Users/Hao/Desktop/first.py&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;ls -l&#x27;</span>)</span><br><span class="line">os.chdir(<span class="string">&#x27;/Users/Hao&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;ls -l&#x27;</span>)</span><br><span class="line">os.mkdir(<span class="string">&#x27;test&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314182913946.png" alt="image-20230314182913946"></p>
<h2 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 位置参数</span><br><span class="line">- 可变参数</span><br><span class="line">- 关键字参数</span><br><span class="line">- 命名关键字参数</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 参数默认值</span><br><span class="line">def f1(a, b=5, c=10):</span><br><span class="line">    return a + b * 2 + c * 3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(f1(1, 2, 3))</span><br><span class="line">print(f1(100, 200))</span><br><span class="line">print(f1(100))</span><br><span class="line">print(f1(c=2, b=3, a=1))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 可变参数</span><br><span class="line">def f2(*args):</span><br><span class="line">    sum = 0</span><br><span class="line">    for num in args:</span><br><span class="line">        sum += num</span><br><span class="line">    return sum</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(f2(1, 2, 3))</span><br><span class="line">print(f2(1, 2, 3, 4, 5))</span><br><span class="line">print(f2())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 关键字参数</span><br><span class="line">def f3(**kw):</span><br><span class="line">    if &#x27;name&#x27; in kw:</span><br><span class="line">        print(&#x27;欢迎你%s!&#x27; % kw[&#x27;name&#x27;])</span><br><span class="line">    elif &#x27;tel&#x27; in kw:</span><br><span class="line">        print(&#x27;你的联系电话是: %s!&#x27; % kw[&#x27;tel&#x27;])</span><br><span class="line">    else:</span><br><span class="line">        print(&#x27;没找到你的个人信息!&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">param = &#123;&#x27;name&#x27;: &#x27;邓小龙&#x27;, &#x27;age&#x27;: 21&#125;</span><br><span class="line">f3(**param)</span><br><span class="line">f3(name=&#x27;邓小龙&#x27;, age=38, tel=&#x27;15549248393&#x27;)</span><br><span class="line">f3(user=&#x27;邓小龙&#x27;, age=38, tel=&#x27;15549248393&#x27;)</span><br><span class="line">f3(user=&#x27;邓小龙&#x27;, age=38, mobile=&#x27;15549248393&#x27;)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314183227865.png" alt="image-20230314183227865"></p>
<h2 id="作用域问题"><a href="#作用域问题" class="headerlink" title="作用域问题"></a>作用域问题</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 局部作用域</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo1</span>():</span><br><span class="line">    a = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">foo1()</span><br><span class="line"><span class="comment"># print(a)  # NameError</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局作用域</span></span><br><span class="line">b = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo2</span>():</span><br><span class="line">    <span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">foo2()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo3</span>():</span><br><span class="line">    b = <span class="number">100</span>     <span class="comment"># 局部变量</span></span><br><span class="line">    <span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">foo3()</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo4</span>():</span><br><span class="line">    <span class="keyword">global</span> b</span><br><span class="line">    b = <span class="number">200</span>     <span class="comment"># 全局变量</span></span><br><span class="line">    <span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">foo4()</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314183322159.png" alt="image-20230314183322159"></p>
<h1 id="Python100天—第七天"><a href="#Python100天—第七天" class="headerlink" title="Python100天—第七天"></a>Python100天—第七天</h1><p>2023.3.8</p>
<h2 id="输入学生考试成绩计算平均分"><a href="#输入学生考试成绩计算平均分" class="headerlink" title="输入学生考试成绩计算平均分"></a>输入学生考试成绩计算平均分</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    number = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入学生人数: &#x27;</span>))</span><br><span class="line">    names = [<span class="literal">None</span>] * number</span><br><span class="line">    scores = [<span class="literal">None</span>] * number</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(names)):</span><br><span class="line">        names[index] = <span class="built_in">input</span>(<span class="string">&#x27;请输入第%d个学生的名字: &#x27;</span> % (index + <span class="number">1</span>))</span><br><span class="line">        scores[index] = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第%d个学生的成绩: &#x27;</span> % (index + <span class="number">1</span>)))</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(names)):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s: %.1f分&#x27;</span> % (names[index], scores[index]))</span><br><span class="line">        total += scores[index]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;平均成绩是: %.1f分&#x27;</span> % (total / number))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314183649262.png" alt="image-20230314183649262"></p>
<h2 id="定义和使用字典"><a href="#定义和使用字典" class="headerlink" title="定义和使用字典"></a>定义和使用字典</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    scores = &#123;<span class="string">&#x27;邓小龙&#x27;</span>: <span class="number">95</span>, <span class="string">&#x27;白元芳&#x27;</span>: <span class="number">78</span>, <span class="string">&#x27;狄仁杰&#x27;</span>: <span class="number">82</span>&#125;</span><br><span class="line">    <span class="built_in">print</span>(scores[<span class="string">&#x27;邓小龙&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(scores[<span class="string">&#x27;狄仁杰&#x27;</span>])</span><br><span class="line">    <span class="keyword">for</span> elem <span class="keyword">in</span> scores:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s\t---&gt;\t%d&#x27;</span> % (elem, scores[elem]))</span><br><span class="line">    scores[<span class="string">&#x27;白元芳&#x27;</span>] = <span class="number">65</span></span><br><span class="line">    scores[<span class="string">&#x27;诸葛王朗&#x27;</span>] = <span class="number">71</span></span><br><span class="line">    scores.update(冷面=<span class="number">67</span>, 方启鹤=<span class="number">85</span>)</span><br><span class="line">    <span class="built_in">print</span>(scores)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;武则天&#x27;</span> <span class="keyword">in</span> scores:</span><br><span class="line">        <span class="built_in">print</span>(scores[<span class="string">&#x27;武则天&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(scores.get(<span class="string">&#x27;武则天&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(scores.get(<span class="string">&#x27;武则天&#x27;</span>, <span class="number">60</span>))</span><br><span class="line">    <span class="built_in">print</span>(scores.popitem())</span><br><span class="line">    <span class="built_in">print</span>(scores.popitem())</span><br><span class="line">    <span class="built_in">print</span>(scores.pop(<span class="string">&#x27;邓小龙&#x27;</span>, <span class="number">100</span>))</span><br><span class="line">    scores.clear()</span><br><span class="line">    <span class="built_in">print</span>(scores)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314183847008.png" alt="image-20230314183847008"></p>
<h2 id="字典的常用操作"><a href="#字典的常用操作" class="headerlink" title="字典的常用操作"></a>字典的常用操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    stu = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;邓小龙&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">21</span>, <span class="string">&#x27;gender&#x27;</span>: <span class="literal">True</span>&#125;</span><br><span class="line">    <span class="built_in">print</span>(stu)</span><br><span class="line">    <span class="built_in">print</span>(stu.keys())</span><br><span class="line">    <span class="built_in">print</span>(stu.values())</span><br><span class="line">    <span class="built_in">print</span>(stu.items())</span><br><span class="line">    <span class="keyword">for</span> elem <span class="keyword">in</span> stu.items():</span><br><span class="line">        <span class="built_in">print</span>(elem)</span><br><span class="line">        <span class="built_in">print</span>(elem[<span class="number">0</span>], elem[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">in</span> stu:</span><br><span class="line">        stu[<span class="string">&#x27;age&#x27;</span>] = <span class="number">20</span></span><br><span class="line">    <span class="built_in">print</span>(stu)</span><br><span class="line">    stu.setdefault(<span class="string">&#x27;score&#x27;</span>, <span class="number">60</span>)</span><br><span class="line">    <span class="built_in">print</span>(stu)</span><br><span class="line">    stu.setdefault(<span class="string">&#x27;score&#x27;</span>, <span class="number">100</span>)</span><br><span class="line">    <span class="built_in">print</span>(stu)</span><br><span class="line">    stu[<span class="string">&#x27;score&#x27;</span>] = <span class="number">100</span></span><br><span class="line">    <span class="built_in">print</span>(stu)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314184030470.png" alt="image-20230314184030470"></p>
<h2 id="生成斐波拉切数列"><a href="#生成斐波拉切数列" class="headerlink" title="生成斐波拉切数列"></a>生成斐波拉切数列</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    f = [<span class="number">1</span> , <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">20</span>):</span><br><span class="line">        f += [f[i - <span class="number">1</span>] + f[i - <span class="number">2</span>]]</span><br><span class="line">        <span class="comment"># f.append(f[i - 1] + f[i - 2])</span></span><br><span class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> f:</span><br><span class="line">        <span class="built_in">print</span>(val, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314184144368.png" alt="image-20230314184144368"></p>
<h2 id="找出列表中最大或最小的元素"><a href="#找出列表中最大或最小的元素" class="headerlink" title="找出列表中最大或最小的元素"></a>找出列表中最大或最小的元素</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    fruits = [<span class="string">&#x27;grape&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;strawberry&#x27;</span>, <span class="string">&#x27;waxberry&#x27;</span>, <span class="string">&#x27;pitaya&#x27;</span>]</span><br><span class="line">    <span class="comment"># 直接使用内置的max和min函数找出列表中最大和最小元素</span></span><br><span class="line">    <span class="comment"># print(max(fruits))</span></span><br><span class="line">    <span class="comment"># print(min(fruits))</span></span><br><span class="line">    max_value = min_value = fruits[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(fruits)):</span><br><span class="line">        <span class="keyword">if</span> fruits[index] &gt; max_value:</span><br><span class="line">            max_value = fruits[index]</span><br><span class="line">        <span class="keyword">elif</span> fruits[index] &lt; min_value:</span><br><span class="line">            min_value = fruits[index]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Max:&#x27;</span>, max_value)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Min:&#x27;</span>, min_value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314184240949.png" alt="image-20230314184240949"></p>
<h2 id="定义和使用列表"><a href="#定义和使用列表" class="headerlink" title="定义和使用列表"></a>定义和使用列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 用下标访问元素</span><br><span class="line">- 添加元素</span><br><span class="line">- 删除元素</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    fruits = [<span class="string">&#x27;grape&#x27;</span>, <span class="string">&#x27;@pple&#x27;</span>, <span class="string">&#x27;strawberry&#x27;</span>, <span class="string">&#x27;waxberry&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(fruits)</span><br><span class="line">    <span class="comment"># 通过下标访问元素</span></span><br><span class="line">    <span class="built_in">print</span>(fruits[<span class="number">0</span>])</span><br><span class="line">    <span class="built_in">print</span>(fruits[<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(fruits[-<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(fruits[-<span class="number">2</span>])</span><br><span class="line">    <span class="comment"># print(fruits[-5]) # IndexError</span></span><br><span class="line">    <span class="comment"># print(fruits[4])  # IndexError</span></span><br><span class="line">    fruits[<span class="number">1</span>] = <span class="string">&#x27;apple&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(fruits)</span><br><span class="line">    <span class="comment"># 添加元素</span></span><br><span class="line">    fruits.append(<span class="string">&#x27;pitaya&#x27;</span>)</span><br><span class="line">    fruits.insert(<span class="number">0</span>, <span class="string">&#x27;banana&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(fruits)</span><br><span class="line">    <span class="comment"># 删除元素</span></span><br><span class="line">    <span class="keyword">del</span> fruits[<span class="number">1</span>]</span><br><span class="line">    fruits.pop()</span><br><span class="line">    fruits.pop(<span class="number">0</span>)</span><br><span class="line">    fruits.remove(<span class="string">&#x27;apple&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(fruits)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314184346311.png" alt="image-20230314184346311"></p>
<h2 id="列表常用操作"><a href="#列表常用操作" class="headerlink" title="列表常用操作"></a>列表常用操作</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 列表连接</span><br><span class="line">- 获取长度</span><br><span class="line">- 遍历列表</span><br><span class="line">- 列表切片</span><br><span class="line">- 列表排序</span><br><span class="line">- 列表反转</span><br><span class="line">- 查找元素</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    fruits = [<span class="string">&#x27;grape&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;strawberry&#x27;</span>, <span class="string">&#x27;waxberry&#x27;</span>]</span><br><span class="line">    fruits += [<span class="string">&#x27;pitaya&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;mango&#x27;</span>]</span><br><span class="line">    <span class="comment"># 循环遍历列表元素</span></span><br><span class="line">    <span class="keyword">for</span> fruit <span class="keyword">in</span> fruits:</span><br><span class="line">        <span class="built_in">print</span>(fruit.title(), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="comment"># 列表切片</span></span><br><span class="line">    fruits2 = fruits[<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line">    <span class="built_in">print</span>(fruits2)</span><br><span class="line">    <span class="comment"># fruit3 = fruits  # 没有复制列表只创建了新的引用</span></span><br><span class="line">    fruits3 = fruits[:]</span><br><span class="line">    <span class="built_in">print</span>(fruits3)</span><br><span class="line">    fruits4 = fruits[-<span class="number">3</span>:-<span class="number">1</span>]</span><br><span class="line">    <span class="built_in">print</span>(fruits4)</span><br><span class="line">    fruits5 = fruits[::-<span class="number">1</span>]</span><br><span class="line">    <span class="built_in">print</span>(fruits5)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314184453390.png" alt="image-20230314184453390"></p>
<h2 id="生成列表"><a href="#生成列表" class="headerlink" title="生成列表"></a>生成列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 用range创建数字列表</span><br><span class="line">- 生成表达式</span><br><span class="line">- 生成器</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成Fibonacci序列的生成器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">n</span>):</span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        <span class="keyword">yield</span> a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 用range创建数值列表</span></span><br><span class="line">    list1 = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>))</span><br><span class="line">    <span class="built_in">print</span>(list1)</span><br><span class="line">    <span class="comment"># 生成表达式</span></span><br><span class="line">    list2 = [x * x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>)]</span><br><span class="line">    <span class="built_in">print</span>(list2)</span><br><span class="line">    list3 = [m + n <span class="keyword">for</span> m <span class="keyword">in</span> <span class="string">&#x27;ABCDEFG&#x27;</span> <span class="keyword">for</span> n <span class="keyword">in</span> <span class="string">&#x27;12345&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(list3)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(list3))</span><br><span class="line">    <span class="comment"># 生成器(节省空间但生成下一个元素时需要花费时间)</span></span><br><span class="line">    gen = (m + n <span class="keyword">for</span> m <span class="keyword">in</span> <span class="string">&#x27;ABCDEFG&#x27;</span> <span class="keyword">for</span> n <span class="keyword">in</span> <span class="string">&#x27;12345&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(gen)</span><br><span class="line">    <span class="keyword">for</span> elem <span class="keyword">in</span> gen:</span><br><span class="line">        <span class="built_in">print</span>(elem, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    gen = fib(<span class="number">20</span>)</span><br><span class="line">    <span class="built_in">print</span>(gen)</span><br><span class="line">    <span class="keyword">for</span> elem <span class="keyword">in</span> gen:</span><br><span class="line">        <span class="built_in">print</span>(elem, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314184600615.png" alt="image-20230314184600615"></p>
<h2 id="双色球随机选号程序"><a href="#双色球随机选号程序" class="headerlink" title="双色球随机选号程序"></a>双色球随机选号程序</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange, randint, sample</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">display</span>(<span class="params">balls</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    输出列表中的双色球号码</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> index, ball <span class="keyword">in</span> <span class="built_in">enumerate</span>(balls):</span><br><span class="line">        <span class="keyword">if</span> index == <span class="built_in">len</span>(balls) - <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;|&#x27;</span>, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%02d&#x27;</span> % ball, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">random_select</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    随机选择一组号码</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    red_balls = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">34</span>)]</span><br><span class="line">    selected_balls = []</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">        index = randrange(<span class="built_in">len</span>(red_balls))</span><br><span class="line">        selected_balls.append(red_balls[index])</span><br><span class="line">        <span class="keyword">del</span> red_balls[index]</span><br><span class="line">    <span class="comment"># 上面的for循环也可以写成下面这行代码</span></span><br><span class="line">    <span class="comment"># sample函数是random模块下的函数</span></span><br><span class="line">    <span class="comment"># selected_balls = sample(red_balls, 6)</span></span><br><span class="line">    selected_balls.sort()</span><br><span class="line">    selected_balls.append(randint(<span class="number">1</span>, <span class="number">16</span>))</span><br><span class="line">    <span class="keyword">return</span> selected_balls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;机选几注: &#x27;</span>))</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        display(random_select())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314184712614.png" alt="image-20230314184712614"></p>
<h2 id="学生考试成绩表"><a href="#学生考试成绩表" class="headerlink" title="学生考试成绩表"></a>学生考试成绩表</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    names = [<span class="string">&#x27;关羽&#x27;</span>, <span class="string">&#x27;张飞&#x27;</span>, <span class="string">&#x27;赵云&#x27;</span>, <span class="string">&#x27;马超&#x27;</span>, <span class="string">&#x27;黄忠&#x27;</span>]</span><br><span class="line">    subjs = [<span class="string">&#x27;语文&#x27;</span>, <span class="string">&#x27;数学&#x27;</span>, <span class="string">&#x27;英语&#x27;</span>]</span><br><span class="line">    scores = [[<span class="number">0</span>] * <span class="number">3</span>] * <span class="number">5</span></span><br><span class="line">    <span class="keyword">for</span> row, name <span class="keyword">in</span> <span class="built_in">enumerate</span>(names):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;请输入%s的成绩&#x27;</span> % name)</span><br><span class="line">        <span class="keyword">for</span> col, subj <span class="keyword">in</span> <span class="built_in">enumerate</span>(subjs):</span><br><span class="line">            scores[row][col] = <span class="built_in">float</span>(<span class="built_in">input</span>(subj + <span class="string">&#x27;: &#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(scores)</span><br><span class="line"><span class="comment">#   for row, name in enumerate(names):</span></span><br><span class="line"><span class="comment">#       print(&#x27;请输入%s的成绩&#x27; % name)</span></span><br><span class="line"><span class="comment">#       scores[row] = [None] * len(subjs)</span></span><br><span class="line"><span class="comment">#       for col, subj in enumerate(subjs):</span></span><br><span class="line"><span class="comment">#           score = float(input(subj + &#x27;: &#x27;))</span></span><br><span class="line"><span class="comment">#           scores[row][col] = score</span></span><br><span class="line"><span class="comment">#   print(scores)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314185119198.png" alt="image-20230314185119198"></p>
<h2 id="定义和使用集合"><a href="#定义和使用集合" class="headerlink" title="定义和使用集合"></a>定义和使用集合</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>&#125;</span><br><span class="line">    <span class="built_in">print</span>(set1)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Length =&#x27;</span>, <span class="built_in">len</span>(set1))</span><br><span class="line">    set2 = <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>))</span><br><span class="line">    <span class="built_in">print</span>(set2)</span><br><span class="line">    set1.add(<span class="number">4</span>)</span><br><span class="line">    set1.add(<span class="number">5</span>)</span><br><span class="line">    set2.update([<span class="number">11</span>, <span class="number">12</span>])</span><br><span class="line">    <span class="built_in">print</span>(set1)</span><br><span class="line">    <span class="built_in">print</span>(set2)</span><br><span class="line">    set2.discard(<span class="number">5</span>)</span><br><span class="line">    <span class="comment"># remove的元素如果不存在会引发KeyError</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">4</span> <span class="keyword">in</span> set2:</span><br><span class="line">        set2.remove(<span class="number">4</span>)</span><br><span class="line">    <span class="built_in">print</span>(set2)</span><br><span class="line">    <span class="comment"># 遍历集合容器</span></span><br><span class="line">    <span class="keyword">for</span> elem <span class="keyword">in</span> set2:</span><br><span class="line">        <span class="built_in">print</span>(elem ** <span class="number">2</span>, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="comment"># 将元组转换成集合</span></span><br><span class="line">    set3 = <span class="built_in">set</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>))</span><br><span class="line">    <span class="built_in">print</span>(set3.pop())</span><br><span class="line">    <span class="built_in">print</span>(set3)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314185313343.png" alt="image-20230314185313343"></p>
<h2 id="集合的常用操作"><a href="#集合的常用操作" class="headerlink" title="集合的常用操作"></a>集合的常用操作</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 交集</span><br><span class="line">- 并集</span><br><span class="line">- 差集</span><br><span class="line">- 子集</span><br><span class="line">- 超集</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    set1 = <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">7</span>))</span><br><span class="line">    <span class="built_in">print</span>(set1)</span><br><span class="line">    set2 = <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">2</span>, <span class="number">11</span>, <span class="number">2</span>))</span><br><span class="line">    <span class="built_in">print</span>(set2)</span><br><span class="line">    set3 = <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">5</span>))</span><br><span class="line">    <span class="built_in">print</span>(set1 &amp; set2)</span><br><span class="line">    <span class="comment"># print(set1.intersection(set2))</span></span><br><span class="line">    <span class="built_in">print</span>(set1 | set2)</span><br><span class="line">    <span class="comment"># print(set1.union(set2))</span></span><br><span class="line">    <span class="built_in">print</span>(set1 - set2)</span><br><span class="line">    <span class="comment"># print(set1.difference(set2))</span></span><br><span class="line">    <span class="built_in">print</span>(set1 ^ set2)</span><br><span class="line">    <span class="comment"># print(set1.symmetric_difference(set2))</span></span><br><span class="line">    <span class="built_in">print</span>(set2 &lt;= set1)</span><br><span class="line">    <span class="comment"># print(set2.issubset(set1))</span></span><br><span class="line">    <span class="built_in">print</span>(set3 &lt;= set1)</span><br><span class="line">    <span class="comment"># print(set3.issubset(set1))</span></span><br><span class="line">    <span class="built_in">print</span>(set1 &gt;= set2)</span><br><span class="line">    <span class="comment"># print(set1.issuperset(set2))</span></span><br><span class="line">    <span class="built_in">print</span>(set1 &gt;= set3)</span><br><span class="line">    <span class="comment"># print(set1.issuperset(set3))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314185427420.png" alt="image-20230314185427420"></p>
<h2 id="井字棋游戏"><a href="#井字棋游戏" class="headerlink" title="井字棋游戏"></a>井字棋游戏</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_board</span>(<span class="params">board</span>):</span><br><span class="line">    <span class="built_in">print</span>(board[<span class="string">&#x27;TL&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;TM&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;TR&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-+-+-&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(board[<span class="string">&#x27;ML&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;MM&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;MR&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-+-+-&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(board[<span class="string">&#x27;BL&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;BM&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;BR&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    init_board = &#123;</span><br><span class="line">        <span class="string">&#x27;TL&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;TM&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;TR&#x27;</span>: <span class="string">&#x27; &#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ML&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;MM&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;MR&#x27;</span>: <span class="string">&#x27; &#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;BL&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;BM&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;BR&#x27;</span>: <span class="string">&#x27; &#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    begin = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> begin:</span><br><span class="line">        curr_board = init_board.copy()</span><br><span class="line">        begin = <span class="literal">False</span></span><br><span class="line">        turn = <span class="string">&#x27;x&#x27;</span></span><br><span class="line">        counter = <span class="number">0</span></span><br><span class="line">        os.system(<span class="string">&#x27;clear&#x27;</span>)</span><br><span class="line">        print_board(curr_board)</span><br><span class="line">        <span class="keyword">while</span> counter &lt; <span class="number">9</span>:</span><br><span class="line">            move = <span class="built_in">input</span>(<span class="string">&#x27;轮到%s走棋, 请输入位置: &#x27;</span> % turn)</span><br><span class="line">            <span class="keyword">if</span> curr_board[move] == <span class="string">&#x27; &#x27;</span>:</span><br><span class="line">                counter += <span class="number">1</span></span><br><span class="line">                curr_board[move] = turn</span><br><span class="line">                <span class="keyword">if</span> turn == <span class="string">&#x27;x&#x27;</span>:</span><br><span class="line">                    turn = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    turn = <span class="string">&#x27;x&#x27;</span></span><br><span class="line">            os.system(<span class="string">&#x27;clear&#x27;</span>)</span><br><span class="line">            print_board(curr_board)</span><br><span class="line">        choice = <span class="built_in">input</span>(<span class="string">&#x27;再玩一局?(yes|no)&#x27;</span>)</span><br><span class="line">        begin = choice == <span class="string">&#x27;yes&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314185525099.png" alt="image-20230314185525099"></p>
<h2 id="元组的定义和使用"><a href="#元组的定义和使用" class="headerlink" title="元组的定义和使用"></a>元组的定义和使用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def main():</span><br><span class="line">    # 定义元组</span><br><span class="line">    t = (&#x27;邓小龙&#x27;, 38, True, &#x27;湖北武汉&#x27;)</span><br><span class="line">    print(t)</span><br><span class="line">    # 获取元组中的元素</span><br><span class="line">    print(t[0])</span><br><span class="line">    print(t[1])</span><br><span class="line">    print(t[2])</span><br><span class="line">    print(t[3])</span><br><span class="line">    # 遍历元组中的值</span><br><span class="line">    for member in t:</span><br><span class="line">        print(member)</span><br><span class="line">    # 重新给元组赋值</span><br><span class="line">    # t[0] = &#x27;王大锤&#x27;      # TypeError</span><br><span class="line">    # 变量t重新引用了新的元组 原来的元组被垃圾回收</span><br><span class="line">    t = (&#x27;王大锤&#x27;, 20, True, &#x27;云南昆明&#x27;)</span><br><span class="line">    print(t)</span><br><span class="line">    # 元组和列表的转换</span><br><span class="line">    person = list(t)</span><br><span class="line">    print(person)</span><br><span class="line">    person[0] = &#x27;李小龙&#x27;</span><br><span class="line">    person[1] = 25</span><br><span class="line">    print(person)</span><br><span class="line">    fruits_list = [&#x27;apple&#x27;, &#x27;banana&#x27;, &#x27;orange&#x27;]</span><br><span class="line">    fruits_tuple = tuple(fruits_list)</span><br><span class="line">    print(fruits_tuple)</span><br><span class="line">    print(fruits_tuple[1])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314185726415.png" alt="image-20230314185726415"></p>
<h2 id="输出10行的杨辉三角-二项式的n次方展开系数"><a href="#输出10行的杨辉三角-二项式的n次方展开系数" class="headerlink" title="输出10行的杨辉三角 - 二项式的n次方展开系数"></a>输出10行的杨辉三角 - 二项式的n次方展开系数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1 1</span><br><span class="line">1 2 1</span><br><span class="line">1 3 3 1</span><br><span class="line">1 4 6 4 1</span><br><span class="line">... ... ...</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;Number of rows: &#x27;</span>))</span><br><span class="line">    yh = [[]] * num</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(yh)):</span><br><span class="line">        yh[row] = [<span class="literal">None</span>] * (row + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(yh[row])):</span><br><span class="line">            <span class="keyword">if</span> col == <span class="number">0</span> <span class="keyword">or</span> col == row:</span><br><span class="line">                yh[row][col] = <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                yh[row][col] = yh[row - <span class="number">1</span>][col] + yh[row - <span class="number">1</span>][col - <span class="number">1</span>]</span><br><span class="line">            <span class="built_in">print</span>(yh[row][col], end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230314185847852.png" alt="image-20230314185847852"></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Java项目开发环境搭建</title>
    <url>/2023/03/03/Java%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="Java项目开发环境搭建"><a href="#Java项目开发环境搭建" class="headerlink" title="Java项目开发环境搭建"></a>Java项目开发环境搭建</h1><h2 id="下载相关软件"><a href="#下载相关软件" class="headerlink" title="下载相关软件"></a>下载相关软件</h2><p><strong>JDK 17</strong></p>
<p><a href="https://www.oracle.com/java/technologies/downloads/">https://www.oracle.com/java/technologies/downloads/</a></p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220607194354678.png" alt="image-20220607194354678"></p>
<p><strong>Tomcat</strong> <strong>10</strong></p>
<p><a href="https://tomcat.apache.org/">https://tomcat.apache.org/</a></p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220607194420299.png" alt="image-20220607194420299"></p>
<p><strong>idea 2021.3</strong></p>
<p><a href="https://www.jetbrains.com/idea/download/#section=windows">https://www.jetbrains.com/idea/download/#section=windows</a></p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220607194437442.png" alt="image-20220607194437442"></p>
<p><strong>MAVEN</strong></p>
<p><a href="https://maven.apache.org/download.cgi">https://maven.apache.org/download.cgi</a></p>
<h2 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h2><h3 id="JDK安装与配置"><a href="#JDK安装与配置" class="headerlink" title="JDK安装与配置"></a>JDK安装与配置</h3><p>安装过程中会出现两次 安装提示 。第一次是安装 jdk ，第二次是安装 jre 。建议两个都安装在同一个java文件夹中的不同文件夹中。（不能都安装在java文件夹的根目录下，jdk和jre安装在同一文件夹会出错），路径一般默认即可，也可以更改不同的路径。</p>
<p><strong>配置环境变量：右击“我的电脑”–&gt;”高级”–&gt;”环境变量”。</strong></p>
<p>（1）JAVA_HOME环境变量。<br> 作用：它指向jdk的安装目录，IDEA/Eclipse/NetBeans/Tomcat等软件就是通过搜索JAVA_HOME变量来找到并使用安装好的jdk。<br> 配置方法：在系统变量里点击新建，变量名填写JAVA_HOME，变量值填写JDK的安装路径。（根据自己的安装路径填写）</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220607194458327.png" alt="image-20220607194458327"></p>
<p>（2）CLASSPATH环境变量。</p>
<p>作用：是指定类搜索路径，要使用已经编写好的类，前提当然是能够找到它们了，JVM就是通过CLASSPTH来寻找类的。我们需要把jdk安装目录下的lib子目录中的dt.jar和tools.jar设置到CLASSPATH中，当然，当前目录“.”也必须加入到该变量中。<br> 配置方法：<br> 新建CLASSPATH变量，变量值为：.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar 。CLASSPATH变量名字，可以大写也可以小写。注意不要忘记前面的点和中间的分号。且要在英文输入的状态下的分号和逗号。</p>
<p>CLASSPATH ：.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220607194520744.png" alt="image-20220607194520744"></p>
<p>（3）path环境变量</p>
<p>作用：指定命令搜索路径，在i命令行下面执行命令如javac编译java程序时，它会到PATH变量所指定的路径中查找看是否能找到相应的命令程序。我们需要把jdk安装目录下的bin目录增加到现有的PATH变量中，bin目录中包含经常要用到的可执行文件如javac/java/javadoc等待，设置好PATH变量后，就可以在任何目录下执行javac/java等工具了。</p>
<p>在系统变量里找到Path变量，这是系统自带的，不用新建。双击Path，由于原来的变量值已经存在，故应在已有的变量后加上“;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin”。注意前面的分号。</p>
<p>Path：;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220607194540041.png" alt="image-20220607194540041"></p>
<p><strong>检验是否配置成功</strong> </p>
<p>运行cmd 分别输入java，javac， java -version </p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220607194553118.png" alt="image-20220607194553118"></p>
<h3 id="配置Tomcat"><a href="#配置Tomcat" class="headerlink" title="配置Tomcat"></a>配置Tomcat</h3><p>下载Tomcat,并且解压到目录</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220607194612125.png" alt="image-20220607194612125"></p>
<p>设置环境变量</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220607194638160.png" alt="image-20220607194638160"></p>
<p>保存系统变量的配置之后，按win+R键打开运行，输入cmd，点击确定，在命令行中输入“startup”，启动tomcat服务，启动成功代表环境变量配置成功。</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220607194656857.png" alt="image-20220607194656857"></p>
<p>在浏览器中输入“localhost:8080”，出现如下界面，代表tomcat环境搭建成功，如下图所示：</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220607194709998.png" alt="image-20220607194709998"></p>
<h3 id="在IntelliJ-IDEA配置Tomcat"><a href="#在IntelliJ-IDEA配置Tomcat" class="headerlink" title="在IntelliJ IDEA配置Tomcat"></a>在IntelliJ IDEA配置Tomcat</h3><p>1.点击Run—EDit Configurations…</p>
<p>2.点击左侧“+”号，找到Tomcat Server—Local（若是没有找到Tomcat Server 可以点击最后一行 34 items more）</p>
<p>3.在Tomcat Server -&gt; Unnamed -&gt; Server -&gt; Application server项目下，点击 Configuration ，找到本地 Tomcat 服务器，再点击 OK按钮。</p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Python100天---第一天</title>
    <url>/2023/03/02/Python100%E5%A4%A9-%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
    <content><![CDATA[<h1 id="100天Python—第一天"><a href="#100天Python—第一天" class="headerlink" title="100天Python—第一天"></a>100天Python—第一天</h1><p>邓小龙 2023.3.1</p>
<h2 id="第一关：hello-world"><a href="#第一关：hello-world" class="headerlink" title="第一关：hello world"></a>第一关：hello world</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello, world!&#x27;</span>)</span><br><span class="line"><span class="comment"># print(&quot;你好,世界！&quot;)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你好&#x27;</span>, <span class="string">&#x27;世界&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;world&#x27;</span>, sep=<span class="string">&#x27;, &#x27;</span>, end=<span class="string">&#x27;!&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;goodbye, world&#x27;</span>, end=<span class="string">&#x27;!\n&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>太过于简单，不解释</p>
<h2 id="第二关：用Python的turtle模块绘制国旗"><a href="#第二关：用Python的turtle模块绘制国旗" class="headerlink" title="第二关：用Python的turtle模块绘制国旗"></a>第二关：用Python的turtle模块绘制国旗</h2><p>首先要知道什么是<a href="https://zhuanlan.zhihu.com/p/64594462">turtle模块</a>，自行点击跳转介绍。</p>
<p>简而言之，就是入门级的图形绘制函数库；</p>
<p>解决步骤如下：</p>
<p>首先，定义两个函数 draw_rectangle 和 draw_star，用于绘制矩形和五角星。然后，定义了主程序 main，该程序包括以下步骤：</p>
<ol>
<li>设置海龟(turtle)绘图速度</li>
<li>抬起画笔</li>
<li>定义国旗左下角的坐标和国旗的宽度和高度</li>
<li>绘制国旗主体</li>
<li>定义大五角星的中心坐标和半径</li>
<li>绘制大五角星</li>
<li>定义小五角星的位置</li>
<li>绘制小五角星</li>
<li> 隐藏海龟 </li>
<li>显示绘图窗口</li>
</ol>
<p>程序的主要思路是根据国旗的比例关系，先绘制大五角星，然后计算出小五角星的位置，并依次绘制。最后隐藏海龟并显示绘图窗口。</p>
<h4 id="完整代码如下："><a href="#完整代码如下：" class="headerlink" title="完整代码如下："></a>完整代码如下：</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_rectangle</span>(<span class="params">x, y, width, height</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;绘制矩形&quot;&quot;&quot;</span></span><br><span class="line">    turtle.goto(x, y)</span><br><span class="line">    turtle.pencolor(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    turtle.fillcolor(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    turtle.begin_fill()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">        turtle.forward(width)</span><br><span class="line">        turtle.left(<span class="number">90</span>)</span><br><span class="line">        turtle.forward(height)</span><br><span class="line">        turtle.left(<span class="number">90</span>)</span><br><span class="line">    turtle.end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_star</span>(<span class="params">x, y, radius</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;绘制五角星&quot;&quot;&quot;</span></span><br><span class="line">    turtle.setpos(x, y)</span><br><span class="line">    pos1 = turtle.pos()</span><br><span class="line">    turtle.circle(-radius, <span class="number">72</span>)</span><br><span class="line">    pos2 = turtle.pos()</span><br><span class="line">    turtle.circle(-radius, <span class="number">72</span>)</span><br><span class="line">    pos3 = turtle.pos()</span><br><span class="line">    turtle.circle(-radius, <span class="number">72</span>)</span><br><span class="line">    pos4 = turtle.pos()</span><br><span class="line">    turtle.circle(-radius, <span class="number">72</span>)</span><br><span class="line">    pos5 = turtle.pos()</span><br><span class="line">    turtle.color(<span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">    turtle.begin_fill()</span><br><span class="line">    turtle.goto(pos3)</span><br><span class="line">    turtle.goto(pos1)</span><br><span class="line">    turtle.goto(pos4)</span><br><span class="line">    turtle.goto(pos2)</span><br><span class="line">    turtle.goto(pos5)</span><br><span class="line">    turtle.end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;主程序&quot;&quot;&quot;</span></span><br><span class="line">    turtle.speed(<span class="number">12</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    x, y = -<span class="number">270</span>, -<span class="number">180</span></span><br><span class="line">    <span class="comment"># 画国旗主体</span></span><br><span class="line">    width, height = <span class="number">540</span>, <span class="number">360</span></span><br><span class="line">    draw_rectangle(x, y, width, height)</span><br><span class="line">    <span class="comment"># 画大星星</span></span><br><span class="line">    pice = <span class="number">22</span></span><br><span class="line">    center_x, center_y = x + <span class="number">5</span> * pice, y + height - pice * <span class="number">5</span></span><br><span class="line">    turtle.goto(center_x, center_y)</span><br><span class="line">    turtle.left(<span class="number">90</span>)</span><br><span class="line">    turtle.forward(pice * <span class="number">3</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    draw_star(turtle.xcor(), turtle.ycor(), pice * <span class="number">3</span>)</span><br><span class="line">    x_poses, y_poses = [<span class="number">10</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br><span class="line">    <span class="comment"># 画小星星</span></span><br><span class="line">    <span class="keyword">for</span> x_pos, y_pos <span class="keyword">in</span> <span class="built_in">zip</span>(x_poses, y_poses):</span><br><span class="line">        turtle.goto(x + x_pos * pice, y + height - y_pos * pice)</span><br><span class="line">        turtle.left(turtle.towards(center_x, center_y) - turtle.heading())</span><br><span class="line">        turtle.forward(pice)</span><br><span class="line">        turtle.right(<span class="number">90</span>)</span><br><span class="line">        draw_star(turtle.xcor(), turtle.ycor(), pice)</span><br><span class="line">    <span class="comment"># 隐藏海龟</span></span><br><span class="line">    turtle.ht()</span><br><span class="line">    <span class="comment"># 显示绘图窗口</span></span><br><span class="line">    turtle.mainloop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p>运行后的结果如下：</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303164907278.png" alt="image-20230303164907278"></p>
<h2 id="第三关：绘制小猪佩奇"><a href="#第三关：绘制小猪佩奇" class="headerlink" title="第三关：绘制小猪佩奇"></a>第三关：绘制小猪佩奇</h2><p>直接给出代码再解释：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">绘制小猪佩奇</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">nose</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画鼻子&quot;&quot;&quot;</span></span><br><span class="line">    penup()</span><br><span class="line">    <span class="comment"># 将海龟移动到指定的坐标</span></span><br><span class="line">    goto(x,y)</span><br><span class="line">    pendown()</span><br><span class="line">    <span class="comment"># 设置海龟的方向（0-东、90-北、180-西、270-南）</span></span><br><span class="line">    setheading(-<span class="number">30</span>)</span><br><span class="line">    begin_fill()</span><br><span class="line">    a = <span class="number">0.4</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">120</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= i &lt; <span class="number">30</span> <span class="keyword">or</span> <span class="number">60</span> &lt;= i &lt;<span class="number">90</span>:</span><br><span class="line">            a = a + <span class="number">0.08</span></span><br><span class="line">            <span class="comment"># 向左转3度</span></span><br><span class="line">            left(<span class="number">3</span>)</span><br><span class="line">            <span class="comment"># 向前走</span></span><br><span class="line">            forward(a)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a = a - <span class="number">0.08</span></span><br><span class="line">            left(<span class="number">3</span>)</span><br><span class="line">            forward(a)</span><br><span class="line">    end_fill()</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">90</span>)</span><br><span class="line">    forward(<span class="number">25</span>)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(<span class="number">10</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    <span class="comment"># 设置画笔的颜色(红, 绿, 蓝)</span></span><br><span class="line">    pencolor(<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>)</span><br><span class="line">    setheading(<span class="number">10</span>)</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">5</span>)</span><br><span class="line">    color(<span class="number">160</span>, <span class="number">82</span>, <span class="number">45</span>)</span><br><span class="line">    end_fill()</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(<span class="number">20</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    pencolor(<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>)</span><br><span class="line">    setheading(<span class="number">10</span>)</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">5</span>)</span><br><span class="line">    color(<span class="number">160</span>, <span class="number">82</span>, <span class="number">45</span>)</span><br><span class="line">    end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">head</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画头&quot;&quot;&quot;</span></span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>), <span class="string">&quot;pink&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    goto(x,y)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    setheading(<span class="number">180</span>)</span><br><span class="line">    circle(<span class="number">300</span>, -<span class="number">30</span>)</span><br><span class="line">    circle(<span class="number">100</span>, -<span class="number">60</span>)</span><br><span class="line">    circle(<span class="number">80</span>, -<span class="number">100</span>)</span><br><span class="line">    circle(<span class="number">150</span>, -<span class="number">20</span>)</span><br><span class="line">    circle(<span class="number">60</span>, -<span class="number">95</span>)</span><br><span class="line">    setheading(<span class="number">161</span>)</span><br><span class="line">    circle(-<span class="number">300</span>, <span class="number">15</span>)</span><br><span class="line">    penup()</span><br><span class="line">    goto(-<span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    setheading(-<span class="number">30</span>)</span><br><span class="line">    a = <span class="number">0.4</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span>&lt;= i &lt; <span class="number">30</span> <span class="keyword">or</span> <span class="number">60</span> &lt;= i &lt; <span class="number">90</span>:</span><br><span class="line">            a = a + <span class="number">0.08</span></span><br><span class="line">            lt(<span class="number">3</span>) <span class="comment">#向左转3度</span></span><br><span class="line">            fd(a) <span class="comment">#向前走a的步长</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a = a - <span class="number">0.08</span></span><br><span class="line">            lt(<span class="number">3</span>)</span><br><span class="line">            fd(a)</span><br><span class="line">    end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ears</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画耳朵&quot;&quot;&quot;</span></span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>), <span class="string">&quot;pink&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    goto(x, y)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    setheading(<span class="number">100</span>)</span><br><span class="line">    circle(-<span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">    circle(-<span class="number">10</span>, <span class="number">120</span>)</span><br><span class="line">    circle(-<span class="number">50</span>, <span class="number">54</span>)</span><br><span class="line">    end_fill()</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">90</span>)</span><br><span class="line">    forward(-<span class="number">12</span>)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(<span class="number">30</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    setheading(<span class="number">100</span>)</span><br><span class="line">    circle(-<span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">    circle(-<span class="number">10</span>, <span class="number">120</span>)</span><br><span class="line">    circle(-<span class="number">50</span>, <span class="number">56</span>)</span><br><span class="line">    end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">eyes</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画眼睛&quot;&quot;&quot;</span></span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">90</span>)</span><br><span class="line">    forward(-<span class="number">20</span>)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(-<span class="number">95</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">15</span>)</span><br><span class="line">    end_fill()</span><br><span class="line">    color(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">90</span>)</span><br><span class="line">    forward(<span class="number">12</span>)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(-<span class="number">3</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">3</span>)</span><br><span class="line">    end_fill()</span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>), <span class="string">&quot;white&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    seth(<span class="number">90</span>)</span><br><span class="line">    forward(-<span class="number">25</span>)</span><br><span class="line">    seth(<span class="number">0</span>)</span><br><span class="line">    forward(<span class="number">40</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">15</span>)</span><br><span class="line">    end_fill()</span><br><span class="line">    color(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">    penup()</span><br><span class="line">    setheading(<span class="number">90</span>)</span><br><span class="line">    forward(<span class="number">12</span>)</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    forward(-<span class="number">3</span>)</span><br><span class="line">    pendown()</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">3</span>)</span><br><span class="line">    end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cheek</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画脸颊&quot;&quot;&quot;</span></span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>))</span><br><span class="line">    penup()</span><br><span class="line">    goto(x,y)</span><br><span class="line">    pendown()</span><br><span class="line">    setheading(<span class="number">0</span>)</span><br><span class="line">    begin_fill()</span><br><span class="line">    circle(<span class="number">30</span>)</span><br><span class="line">    end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mouth</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;画嘴巴&quot;&quot;&quot;</span></span><br><span class="line">    color(<span class="number">239</span>, <span class="number">69</span>, <span class="number">19</span>)</span><br><span class="line">    penup()</span><br><span class="line">    goto(x, y)</span><br><span class="line">    pendown()</span><br><span class="line">    setheading(-<span class="number">80</span>)</span><br><span class="line">    circle(<span class="number">30</span>, <span class="number">40</span>)</span><br><span class="line">    circle(<span class="number">40</span>, <span class="number">80</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setting</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;设置参数&quot;&quot;&quot;</span></span><br><span class="line">    pensize(<span class="number">4</span>)</span><br><span class="line">    <span class="comment"># 隐藏海龟</span></span><br><span class="line">    hideturtle()</span><br><span class="line">    colormode(<span class="number">255</span>)</span><br><span class="line">    color((<span class="number">255</span>, <span class="number">155</span>, <span class="number">192</span>), <span class="string">&quot;pink&quot;</span>)</span><br><span class="line">    setup(<span class="number">840</span>, <span class="number">500</span>)</span><br><span class="line">    speed(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;主函数&quot;&quot;&quot;</span></span><br><span class="line">    setting() </span><br><span class="line">    nose(-<span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">    head(-<span class="number">69</span>, <span class="number">167</span>)</span><br><span class="line">    ears(<span class="number">0</span>, <span class="number">160</span>)</span><br><span class="line">    eyes(<span class="number">0</span>, <span class="number">140</span>)</span><br><span class="line">    cheek(<span class="number">80</span>, <span class="number">10</span>)</span><br><span class="line">    mouth(-<span class="number">20</span>, <span class="number">30</span>)</span><br><span class="line">    done()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这是一个使用Python的turtle模块绘制小猪佩奇的程序。程序首先定义了一系列函数来绘制小猪佩奇的不同部分，例如头、鼻子、耳朵、眼睛、脸颊和嘴巴。然后，在主函数中，调用这些函数来绘制小猪佩奇的完整形象。</p>
<p>以下是程序中各个函数的作用：</p>
<ul>
<li>nose(x,y)：绘制小猪佩奇的鼻子部分。</li>
<li>head(x,y)：绘制小猪佩奇的头部。</li>
<li>ears(x,y)：绘制小猪佩奇的耳朵部分。</li>
<li>eyes(x,y)：绘制小猪佩奇的眼睛部分。</li>
<li>cheek(x,y)：绘制小猪佩奇的脸颊部分。</li>
<li>mouth(x,y)：绘制小猪佩奇的嘴巴部分。</li>
<li>setting()：设置绘制小猪佩奇所需要的参数，例如画笔大小、颜色模式、窗口大小和速度等。</li>
<li>main()：调用各个函数来绘制小猪佩奇的完整形象。</li>
</ul>
<p>最后，调用done()函数来保持图形窗口不关闭，以便观察绘制的结果。</p>
<p>这是运行后的结果：</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303164948434.png" alt="image-20230303164948434"></p>
<blockquote>
<p>题目作者：骆昊</p>
</blockquote>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python100天---第二天</title>
    <url>/2023/03/03/Python100%E5%A4%A9-%E7%AC%AC%E4%BA%8C%E5%A4%A9/</url>
    <content><![CDATA[<h1 id="Python100天—第二天"><a href="#Python100天—第二天" class="headerlink" title="Python100天—第二天"></a>Python100天—第二天</h1><h2 id="第一关：将华氏温度转换为摄氏温度"><a href="#第一关：将华氏温度转换为摄氏温度" class="headerlink" title="第一关：将华氏温度转换为摄氏温度"></a>第一关：将华氏温度转换为摄氏温度</h2><p><strong>相关知识:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">摄氏度 = (华氏度 - 32) / 1.8</span><br></pre></td></tr></table></figure>

<p>那就很简单了：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入华氏温度: &#x27;</span>))</span><br><span class="line">c = (f - <span class="number">32</span>) / <span class="number">1.8</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%.1f华氏度 = %.1f摄氏度&#x27;</span> % (f, c))</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303212440836.png" alt="image-20230303212440836"></p>
<h2 id="第二关：输入半径计算圆的周长和面积"><a href="#第二关：输入半径计算圆的周长和面积" class="headerlink" title="第二关：输入半径计算圆的周长和面积"></a>第二关：输入半径计算圆的周长和面积</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">radius = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入圆的半径: &#x27;</span>))</span><br><span class="line">perimeter = <span class="number">2</span> * math.pi * radius</span><br><span class="line">area = math.pi * radius * radius</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;周长: %.2f&#x27;</span> % perimeter)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;面积: %.2f&#x27;</span> % area)</span><br></pre></td></tr></table></figure>

<p>具体解释如下：</p>
<ol>
<li><code>import math</code>：导入 Python 内置的数学库 math，以便使用其中的圆周率和数学函数。</li>
<li><code>radius = float(input(&#39;请输入圆的半径: &#39;))</code>：使用 <code>input()</code> 函数接收用户输入的半径值，并使用 <code>float()</code> 函数将其转换为浮点数类型，并将其赋值给变量 <code>radius</code>。</li>
<li><code>perimeter = 2 * math.pi * radius</code>：根据圆的周长公式 <code>C = 2πr</code>，计算圆的周长，其中 <code>math.pi</code> 表示圆周率，<code>radius</code> 表示半径，计算结果赋值给变量 <code>perimeter</code>。</li>
<li><code>area = math.pi * radius * radius</code>：根据圆的面积公式 <code>A = πr²</code>，计算圆的面积，其中 <code>math.pi</code> 表示圆周率，<code>radius</code> 表示半径，计算结果赋值给变量 <code>area</code>。</li>
<li><code>print(&#39;周长: %.2f&#39; % perimeter)</code>：使用字符串格式化输出圆的周长，其中 <code>%</code> 是字符串格式化运算符，<code>&#39;周长: %.2f&#39;</code> 是输出的字符串格式，其中 <code>.2f</code> 表示输出的浮点数保留两位小数，<code>perimeter</code> 表示输出的值。</li>
<li><code>print(&#39;面积: %.2f&#39; % area)</code>：使用字符串格式化输出圆的面积，其中 <code>%</code> 是字符串格式化运算符，<code>&#39;面积: %.2f&#39;</code> 是输出的字符串格式，其中 <code>.2f</code> 表示输出的浮点数保留两位小数，<code>area</code> 表示输出的值。</li>
</ol>
<p>最终运行程序，用户输入圆的半径后，程序将自动计算圆的周长和面积，并输出结果。</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303213230525.png" alt="image-20230303213230525"></p>
<h2 id="第三关：输入年份-如果是闰年输出True-否则输出False"><a href="#第三关：输入年份-如果是闰年输出True-否则输出False" class="headerlink" title="第三关：输入年份 如果是闰年输出True 否则输出False"></a>第三关：输入年份 如果是闰年输出True 否则输出False</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">year = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入年份: &#x27;</span>))</span><br><span class="line"><span class="comment"># 如果代码太长写成一行不便于阅读 可以使用\或()折行</span></span><br><span class="line">is_leap = (year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span></span><br><span class="line">           year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(is_leap)</span><br></pre></td></tr></table></figure>

<p>具体解释如下：</p>
<ol>
<li><code>year = int(input(&#39;请输入年份: &#39;))</code>：使用 <code>input()</code> 函数接收用户输入的年份，并使用 <code>int()</code> 函数将其转换为整数类型，并将其赋值给变量 <code>year</code>。</li>
<li><code>is_leap = (year % 4 == 0 and year % 100 != 0 or year % 400 == 0)</code>：根据闰年的定义，如果一个年份是 4 的倍数但不是 100 的倍数，或者是 400 的倍数，就是闰年。本代码使用一个表达式判断输入的年份是否为闰年，该表达式使用了逻辑运算符 <code>and</code> 和 <code>or</code>，其中 <code>and</code> 表示两个条件都要满足才为真，<code>or</code> 表示其中一个条件满足就为真。表达式的结果为布尔值，即 True 或 False，然后将其赋值给变量 <code>is_leap</code>。</li>
<li><code>print(is_leap)</code>：使用 <code>print()</code> 函数输出变量 <code>is_leap</code> 的值，即输入的年份是否为闰年。</li>
</ol>
<p>最终运行程序，用户输入年份后，程序将自动判断该年份是否为闰年，并输出结果。</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303213617270.png" alt="image-20230303213617270"></p>
<h2 id="第四关：运算符的使用"><a href="#第四关：运算符的使用" class="headerlink" title="第四关：运算符的使用"></a>第四关：运算符的使用</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">5</span></span><br><span class="line">b = <span class="number">10</span></span><br><span class="line">c = <span class="number">3</span></span><br><span class="line">d = <span class="number">4</span></span><br><span class="line">e = <span class="number">5</span></span><br><span class="line">a += b</span><br><span class="line">a -= c</span><br><span class="line">a *= d</span><br><span class="line">a /= e</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a = &quot;</span>, a)</span><br><span class="line"></span><br><span class="line">flag1 = <span class="number">3</span> &gt; <span class="number">2</span></span><br><span class="line">flag2 = <span class="number">2</span> &lt; <span class="number">1</span></span><br><span class="line">flag3 = flag1 <span class="keyword">and</span> flag2</span><br><span class="line">flag4 = flag1 <span class="keyword">or</span> flag2</span><br><span class="line">flag5 = <span class="keyword">not</span> flag1</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag1 = &quot;</span>, flag1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag2 = &quot;</span>, flag2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag3 = &quot;</span>, flag3)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag4 = &quot;</span>, flag4)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag5 = &quot;</span>, flag5)</span><br><span class="line"><span class="built_in">print</span>(flag1 <span class="keyword">is</span> <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(flag2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<p>太简单，不解释</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303213856173.png" alt="image-20230303213856173"></p>
<h2 id="第五关：字符串常用操作"><a href="#第五关：字符串常用操作" class="headerlink" title="第五关：字符串常用操作"></a>第五关：字符串常用操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&#x27;hello, world!&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串的长度是:&#x27;</span>, <span class="built_in">len</span>(str1))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;单词首字母大写: &#x27;</span>, str1.title())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串变大写: &#x27;</span>, str1.upper())</span><br><span class="line"><span class="comment"># str1 = str1.upper()</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串是不是大写: &#x27;</span>, str1.isupper())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串是不是以hello开头: &#x27;</span>, str1.startswith(<span class="string">&#x27;hello&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串是不是以hello结尾: &#x27;</span>, str1.endswith(<span class="string">&#x27;hello&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串是不是以感叹号开头: &#x27;</span>, str1.startswith(<span class="string">&#x27;!&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;字符串是不是一感叹号结尾: &#x27;</span>, str1.endswith(<span class="string">&#x27;!&#x27;</span>))</span><br><span class="line">str2 = <span class="string">&#x27;- \u9a86\u660a&#x27;</span></span><br><span class="line">str3 = str1.title() + <span class="string">&#x27; &#x27;</span> + str2.lower()</span><br><span class="line"><span class="built_in">print</span>(str3)</span><br></pre></td></tr></table></figure>

<p>具体解释如下：</p>
<ol>
<li><code>str1 = &#39;hello, world!&#39;</code>：将字符串 <code>&#39;hello, world!&#39;</code> 赋值给变量 <code>str1</code>。</li>
<li><code>print(&#39;字符串的长度是:&#39;, len(str1))</code>：使用 <code>len()</code> 函数计算字符串 <code>str1</code> 的长度，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;单词首字母大写: &#39;, str1.title())</code>：使用 <code>title()</code> 方法将字符串中每个单词的首字母大写，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串变大写: &#39;, str1.upper())</code>：使用 <code>upper()</code> 方法将字符串中所有字符变为大写，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串是不是大写: &#39;, str1.isupper())</code>：使用 <code>isupper()</code> 方法判断字符串中所有字符是否都是大写字母，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串是不是以hello开头: &#39;, str1.startswith(&#39;hello&#39;))</code>：使用 <code>startswith()</code> 方法判断字符串是否以指定的子字符串 <code>&#39;hello&#39;</code> 开头，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串是不是以hello结尾: &#39;, str1.endswith(&#39;hello&#39;))</code>：使用 <code>endswith()</code> 方法判断字符串是否以指定的子字符串 <code>&#39;hello&#39;</code> 结尾，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串是不是以感叹号开头: &#39;, str1.startswith(&#39;!&#39;))</code>：使用 <code>startswith()</code> 方法判断字符串是否以指定的字符 <code>&#39;!&#39;</code> 开头，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>print(&#39;字符串是不是一感叹号结尾: &#39;, str1.endswith(&#39;!&#39;))</code>：使用 <code>endswith()</code> 方法判断字符串是否以指定的字符 <code>&#39;!&#39;</code> 结尾，并使用 <code>print()</code> 函数输出结果。</li>
<li><code>str2 = &#39;- \U9a86\U660a&#39;</code>：将字符串 <code>&#39;- \U9a86\U660a&#39;</code> 赋值给变量 <code>str2</code>，其中 <code>\U9a86\U660a</code> 是 Unicode 字符编码，表示中文姓名“骆昊”。</li>
<li><code>str3 = str1.title() + &#39; &#39; + str2.lower()</code>：将字符串 <code>str1</code> 使用 <code>title()</code> 方法转换为每个单词首字母大写的形式，然后将其与字符串 <code>str2</code> 全部转换为小写形式拼接起来，赋值给变量 <code>str3</code>。</li>
<li><code>print(str3)</code>：使用 <code>print()</code> 函数输出变量 <code>str3</code> 的值。</li>
</ol>
<p>最终运行程序，将依次输出字符串的长度、单词首字母大写的形式、字符串全部大写的形式、字符串是否全部大写、字符串是否以指定的子字符串开头或结尾、拼接后的字符串。</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303214500244.png" alt="image-20230303214500244"></p>
<h2 id="第六关：使用变量保存数据并进行操作"><a href="#第六关：使用变量保存数据并进行操作" class="headerlink" title="第六关：使用变量保存数据并进行操作"></a>第六关：使用变量保存数据并进行操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">321</span></span><br><span class="line">b = <span class="number">123</span></span><br><span class="line"><span class="built_in">print</span>(a + b)</span><br><span class="line"><span class="built_in">print</span>(a - b)</span><br><span class="line"><span class="built_in">print</span>(a * b)</span><br><span class="line"><span class="built_in">print</span>(a / b)</span><br><span class="line"><span class="built_in">print</span>(a // b)</span><br><span class="line"><span class="built_in">print</span>(a % b)</span><br><span class="line"><span class="built_in">print</span>(a ** b)</span><br></pre></td></tr></table></figure>

<p>这段代码定义了两个整型变量a和b，分别赋值为321和123。然后分别进行了加、减、乘、除、整除、取余和幂运算，并将结果打印出来。</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230303215247452.png" alt="image-20230303215247452"></p>
<blockquote>
<p>题目作者：骆昊</p>
</blockquote>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>SSM环境搭建</title>
    <url>/2023/03/01/SSM%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="SSM-环境搭建"><a href="#SSM-环境搭建" class="headerlink" title="SSM 环境搭建"></a>SSM 环境搭建</h2><p>小龙龙  2022.5</p>
<hr>
<p>SSM 框架 是 Spring、SpringMVC、MyBatis 的缩写，这三个框架整合起来适用于搭建各种大型的企业级应用系统。</p>
<h3 id="框架之间的关系"><a href="#框架之间的关系" class="headerlink" title="框架之间的关系"></a>框架之间的关系</h3><p><strong>Spring 和 SpringMVC的关系</strong></p>
<p>Spring 和 SpringMVC 都是用来管理对象的<code>容器</code>。</p>
<p>SpringMVC 主要用来管理 Controller ，Spring 主要用来管理 Service 和 Dao 以及其他对象。</p>
<p>所以我们在 SpringMVC 的配置文件里配置的注解扫描路径就是 Controller的路径，而 Spring 的配置文件配置的注解扫描路径会排除 Controller。</p>
<p>Spring 和 SpringMVC 是父子容器的关系。Spring 容器是父容器，SpringMVC 是子容器。</p>
<p>子容器可以访问父容器的对象，但是在父容器里不能访问子容器的对象。也就是说在 Controller 里可以访问 Service 对象，但是在 service 里不可以访问 Controller 对象。</p>
<p>SpringMVC 是 Spring 的子项目，属于 Spring 家族的一部分。</p>
<p><strong>Spring 和 Mybatis</strong></p>
<p>MyBatis 是一个基于 java 的持久层框架，它内部封装了 jdbc。它和 Spring 看起来好像没啥关系。</p>
<p>但是 Mybatis 开发过程中有很多<code>痛点</code>：</p>
<p>1.配置繁琐，我们需要配置实体类的别名、映射文件所在位置、数据源等。</p>
<p>2.创建 Mapper 麻烦。</p>
<p>3.Mybatis 接口调用比较繁琐：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.读取配置文件</span></span><br><span class="line"><span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line"><span class="comment">// 2.创建 SqlSessionFactory 工厂</span></span><br><span class="line"><span class="type">SqlSessionFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(in);</span><br><span class="line"><span class="comment">// 3.获取 SqlSession 对象</span></span><br><span class="line"><span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> factory.openSession();</span><br><span class="line"><span class="comment">// 4.使用 SqlSession 创建 Dao 接口的代理对象</span></span><br><span class="line"><span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> session.getMapper(UserDao.class);</span><br><span class="line"><span class="comment">// 5.执行接口的方法</span></span><br><span class="line">List&lt;User&gt; userList = userDao.getAll();</span><br></pre></td></tr></table></figure>

<p>但是 Spring 可以帮助 Mybatis 解决这些痛点：</p>
<p>1.DataSource 可以作为 Spring 的一个 bean</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.Spring 也可以管理 SqlSessionFactory 对象、设置实体类别名、管理 mapper 文件。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 管理mybatis操作数据库的会话对象SqlSession --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置数据源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置类型别名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.deng.ssm.model&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置映射文件的路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:/mapper/*.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3.利用 Spring 的动态代理技术自动创建 Dao 接口的代理对象：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- 在所设置的包下，将所有的接口生成动态代理实现类，并由spring容器管理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.deng.ssm.dao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="整合思路"><a href="#整合思路" class="headerlink" title="整合思路"></a>整合思路</h3><p>表面看是 SSM 整合，实际上是 Spring 和 Mybatis 的整合。</p>
<p>因为 Spring 和 SpringMVC 无缝整合，所以 SpringMVC 的配置基本不用动。</p>
<p>但是我们需要注意一点：</p>
<blockquote>
<p>Spring 是用来管理对象的工厂，我们需要保证这个工厂只被创建一次。所以需要在 web.xml 配置 Spring 的监听器。当 Tomcat 一启动，自动初始化 Spring 的 IOC 容器，创建 Spring 的工厂。</p>
</blockquote>
<h3 id="整合流程"><a href="#整合流程" class="headerlink" title="整合流程"></a>整合流程</h3><p><strong>先配置 SpringMVC：</strong></p>
<p>1.创建 SpringMVC 的配置文件，配置注解扫描 controller、访问静态资源、视图解析器。</p>
<p>2.web.xml 配置中央调度器、字符过滤器</p>
<p><strong>再整合 Spring 和 Mybatis</strong></p>
<p>3.创建 spring 的配置文件，配置注解扫描排除 controller。</p>
<p>4.配置数据源</p>
<p>5.配置 SqlSessionFactoryBean</p>
<p>6.配置管理自动生成的 Dao 层的代理对象</p>
<p>7.配置事务管理</p>
<p><strong>最后再配置 Spring 的监听器</strong>，启动项目自动初始化 Spring 容器。</p>
<p>8.在 web.xml 配置 Spring 的监听器。</p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>mybatis+jsp+servlet</title>
    <url>/2023/03/03/mybatis-jsp-servlet/</url>
    <content><![CDATA[<h1 id="mybatis-jsp-servlet-Mysql"><a href="#mybatis-jsp-servlet-Mysql" class="headerlink" title="mybatis+jsp+servlet+Mysql"></a>mybatis+jsp+servlet+Mysql</h1><p>小龙龙 2022.4</p>
<hr>
<h5 id="实现软件资源管理功能"><a href="#实现软件资源管理功能" class="headerlink" title="实现软件资源管理功能"></a>实现软件资源管理功能</h5><p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220503140609249.png" alt="image-20220503140609249"></p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220503140655040.png" alt="image-20220503140655040"></p>
<h3 id="项目文件夹"><a href="#项目文件夹" class="headerlink" title="项目文件夹"></a>项目文件夹</h3><p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220503140752337.png" alt="image-20220503140752337"></p>
<h3 id="依赖jar包坐标"><a href="#依赖jar包坐标" class="headerlink" title="依赖jar包坐标"></a>依赖jar包坐标</h3><blockquote>
<?xmlversion="1.0" encoding="UTF-8"?>
<p>&lt;projectxmlns=”<a href="http://maven.apache.org/POM/4.0.0&quot;">http://maven.apache.org/POM/4.0.0&quot;</a><br>xmlns:xsi=”<a href="http://www.w3.org/2001/XMLSchema-instance&quot;">http://www.w3.org/2001/XMLSchema-instance&quot;</a><br>xsi:schemaLocation=”<a href="http://maven.apache.org/POM/4.0.0">http://maven.apache.org/POM/4.0.0</a><br><a href="http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;">http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</a><br><modelVersion>4.0.0</modelVersion><br><groupId>com.zeng</groupId><br><artifactId>demo</artifactId><br><packaging>pom</packaging><br><version>1.0-SNAPSHOT</version><br><modules><br><module>servlet-demo</module><br><module>jsp-demo</module><br><module>jdbc-demo</module><br><module>mybatis-demo1</module><br><module>jsp-servlet-jdbc-mysql</module><br></modules><br><dependencies></p>
<!--
https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
<dependency>
<groupId>javax.servlet</groupId>
<artifactId>javax.servlet-api</artifactId>
<version>4.0.1</version>
<scope>provided</scope>
</dependency>
<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
<dependency>
<groupId>org.mybatis</groupId>
<artifactId>mybatis</artifactId>
<version>3.4.6</version>
</dependency>
<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-
java -->
<dependency>
<groupId>mysql</groupId>
<artifactId>mysql-connector-java</artifactId>
<version>8.0.22</version>
</dependency>
<!--
https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -
->
<dependency>
<groupId>org.apache.logging.log4j</groupId>
<artifactId>log4j-core</artifactId>
<version>2.17.1</version>
</dependency>
<!-- 
jsp-->
<!--
https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-
api -->
<dependency>
<groupId>javax.servlet.jsp</groupId>
<artifactId>javax.servlet.jsp-api</artifactId>
<version>2.3.3</version>
<scope>provided</scope>
</dependency>
<!-- https://mvnrepository.com/artifact/javax.servlet/jstl -->
<dependency>
<groupId>javax.servlet</groupId>
<artifactId>jstl</artifactId>
<version>1.2</version>
</dependency>
<!-- https://mvnrepository.com/artifact/taglibs/standard -->
<dependency>
<groupId>taglibs</groupId>
<artifactId>standard</artifactId>
<version>1.1.2</version>
</dependency>
<!-- https://mvnrepository.com/artifact/org.webjars/bootstrap --

<blockquote>
<dependency>
<groupId>org.webjars</groupId>
<artifactId>bootstrap</artifactId>
<version>3.3.6</version>
</dependency>
</dependencies>
<properties>
<maven.compiler.source>8</maven.compiler.source>
<maven.compiler.target>8</maven.compiler.target>
</properties>
</project>
</blockquote>
</blockquote>
<h3 id="数据库表"><a href="#数据库表" class="headerlink" title="数据库表"></a>数据库表</h3><blockquote>
<p>create database teach;<br>use teach;<br>create table stype<br>(<br>typeid int primary key auto_increment,<br>typename varchar(100),<br>memo varchar(500)<br>);<br>create table soft<br>(<br>id int primary key auto_increment,<br>softname varchar(100),<br>version varchar(20),<br>description varchar(200),<br>adress varchar(100),<br>typeid int not null,<br>foreign key(typeid) references stype(typeid)<br>);</p>
</blockquote>
<h3 id="全局配置文件mybatis-config-xml"><a href="#全局配置文件mybatis-config-xml" class="headerlink" title="全局配置文件mybatis-config.xml"></a>全局配置文件mybatis-config.xml</h3><blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&gt;<span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line">&gt;<span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">&gt;</span>PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</span><br><span class="line">&gt;<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">&gt;<span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">&gt;<span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://</span></span></span><br><span class="line"><span class="string"><span class="tag">     localhost:3306/teach?serverTimezone=Asia/Shanghai<span class="symbol">&amp;amp;</span>useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">&gt;<span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mapper/SoftMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mapper/StypeMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>


</blockquote>
<h3 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h3><p>MybatisUtil.java</p>
<blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&gt;<span class="keyword">package</span> com.deng.mybatis.util;</span><br><span class="line">&gt;<span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line">&gt;<span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line">&gt;<span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line">&gt;<span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line">&gt;<span class="keyword">import</span> java.io.InputStream;</span><br><span class="line">&gt;<span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisUtil</span> &#123;</span><br><span class="line">&gt;<span class="comment">//定义 SqlSessionFactory</span></span><br><span class="line">&gt;<span class="keyword">private</span> <span class="keyword">static</span> <span class="type">SqlSessionFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">&gt;<span class="keyword">static</span> &#123;</span><br><span class="line">&gt;<span class="comment">//使用 静态块 创建一次 SqlSessionFactory</span></span><br><span class="line">&gt;<span class="keyword">try</span>&#123;</span><br><span class="line"> <span class="type">String</span> <span class="variable">config</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">&gt;<span class="comment">//读取配置文件</span></span><br><span class="line"> <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Resources.getResourceAsStream(config);</span><br><span class="line">&gt;<span class="comment">//创建 SqlSessionFactory 对象</span></span><br><span class="line"> factory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(in);</span><br><span class="line">&gt;&#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line"> factory = <span class="literal">null</span>;</span><br><span class="line"> e.printStackTrace();</span><br><span class="line">&gt;&#125;</span><br><span class="line">&gt;&#125;</span><br><span class="line">&gt;<span class="comment">/* 获取 SqlSession 对象 */</span></span><br><span class="line">&gt;<span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSqlSession</span><span class="params">()</span>&#123;</span><br><span class="line">&gt;<span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">&gt;<span class="keyword">if</span>( factory != <span class="literal">null</span>)&#123;</span><br><span class="line"> session = factory.openSession();</span><br><span class="line">&gt;&#125;</span><br><span class="line">&gt;<span class="keyword">return</span> session;</span><br><span class="line">&gt;&#125;</span><br><span class="line">&gt;&#125;</span><br></pre></td></tr></table></figure>


</blockquote>
<h3 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h3><p>Soft.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.deng.mybatis.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Soft</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String softName;</span><br><span class="line">    <span class="keyword">private</span> String version;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="keyword">private</span> String adress;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> typeid;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Soft</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Soft</span><span class="params">(<span class="type">int</span> id,String softname, String version, String</span></span><br><span class="line"><span class="params">            description, String adress, <span class="type">int</span> typeid)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.id=id;</span><br><span class="line">        <span class="built_in">this</span>.softName =softname;</span><br><span class="line">        <span class="built_in">this</span>.version=version;</span><br><span class="line">        <span class="built_in">this</span>.description=description;</span><br><span class="line">        <span class="built_in">this</span>.adress=adress;</span><br><span class="line">        <span class="built_in">this</span>.typeid=typeid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Soft</span><span class="params">(String softname, String version, String</span></span><br><span class="line"><span class="params">            description, String adress, <span class="type">int</span> typeid)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.softName =softname;</span><br><span class="line">        <span class="built_in">this</span>.version=version;</span><br><span class="line">        <span class="built_in">this</span>.description=description;</span><br><span class="line">        <span class="built_in">this</span>.adress=adress;</span><br><span class="line">        <span class="built_in">this</span>.typeid=typeid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSoftName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> softName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSoftName</span><span class="params">(String softName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.softName = softName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getVersion</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> version;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVersion</span><span class="params">(String version)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.version = version;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDescription</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> description;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDescription</span><span class="params">(String description)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.description = description;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAdress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> adress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAdress</span><span class="params">(String adress)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.adress = adress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTypeid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> typeid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTypeid</span><span class="params">(<span class="type">int</span> typeid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.typeid = typeid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Soft1.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.deng.mybatis.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Soft1</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String softName;</span><br><span class="line">    <span class="keyword">private</span> String version;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="keyword">private</span> String adress;</span><br><span class="line">    <span class="keyword">private</span> Stype stype;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Soft1</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Soft1</span><span class="params">(<span class="type">int</span> id,String softname, String version, String description, String adress, Stype stype)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.id=id;</span><br><span class="line">        <span class="built_in">this</span>.softName =softname;</span><br><span class="line">        <span class="built_in">this</span>.version=version;</span><br><span class="line">        <span class="built_in">this</span>.description=description;</span><br><span class="line">        <span class="built_in">this</span>.adress=adress;</span><br><span class="line">        <span class="built_in">this</span>.stype=stype;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Soft1</span><span class="params">(String softname, String version, String</span></span><br><span class="line"><span class="params">            description, String adress, Stype stype)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.softName =softname;</span><br><span class="line">        <span class="built_in">this</span>.version=version;</span><br><span class="line">        <span class="built_in">this</span>.description=description;</span><br><span class="line">        <span class="built_in">this</span>.adress=adress;</span><br><span class="line">        <span class="built_in">this</span>.stype=stype;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSoftName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> softName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSoftName</span><span class="params">(String softName)</span> &#123;<span class="built_in">this</span>.softName = softName;&#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getVersion</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> version;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVersion</span><span class="params">(String version)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.version = version;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDescription</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> description;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDescription</span><span class="params">(String description)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.description = description;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAdress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> adress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAdress</span><span class="params">(String adress)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.adress = adress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Stype <span class="title function_">getStype</span><span class="params">()</span> &#123;<span class="keyword">return</span> stype;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStype</span><span class="params">(Stype stype)</span> &#123;<span class="built_in">this</span>.stype = stype;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Stype.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.deng.mybatis.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stype</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> typeid;</span><br><span class="line">    <span class="keyword">private</span> String typename;</span><br><span class="line">    <span class="keyword">private</span> String memo;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Stype</span><span class="params">(<span class="type">int</span> typeid,String typename,String memo)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.typeid=typeid;</span><br><span class="line">        <span class="built_in">this</span>.typename=typename;</span><br><span class="line">        <span class="built_in">this</span>.memo=memo;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Stype</span><span class="params">(String typename,String memo)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.typename=typename;</span><br><span class="line">        <span class="built_in">this</span>.memo=memo;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Stype</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTypeid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> typeid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTypeid</span><span class="params">(<span class="type">int</span> typeid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.typeid = typeid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTypename</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> typename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTypename</span><span class="params">(String typename)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.typename = typename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMemo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> memo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMemo</span><span class="params">(String memo)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.memo = memo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="mapper层接口"><a href="#mapper层接口" class="headerlink" title="mapper层接口"></a>mapper层接口</h3><p>SoftMapper.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.deng.mybatis.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.deng.mybatis.model.Soft;</span><br><span class="line"><span class="keyword">import</span> com.deng.mybatis.model.Soft1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SoftMapper</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">insertSoft</span><span class="params">(Soft soft)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">delSoftById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateSoftById</span><span class="params">(Soft soft)</span>;</span><br><span class="line">    List&lt;Soft&gt; <span class="title function_">selAllSofts</span><span class="params">()</span>;</span><br><span class="line">    List&lt;Soft&gt; <span class="title function_">selSoftByName</span><span class="params">(String value)</span>;</span><br><span class="line">    Soft <span class="title function_">selSoftById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">    List&lt;Soft1&gt; <span class="title function_">getSoftsWithType</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>SoftMapper.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.deng.mybatis.mapper.SoftMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;softTypeMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.deng.mybatis.model.Soft1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;softName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;softname&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;version&quot;</span> <span class="attr">column</span>=<span class="string">&quot;version&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;description&quot;</span> <span class="attr">column</span>=<span class="string">&quot;description&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;adress&quot;</span> <span class="attr">column</span>=<span class="string">&quot;adress&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;stype&quot;</span> <span class="attr">column</span>=<span class="string">&quot;typeid&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;com.deng.mybatis.model.Stype&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;typeid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;typeid&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;typename&quot;</span> <span class="attr">column</span>=<span class="string">&quot;typename&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;memo&quot;</span> <span class="attr">column</span>=<span class="string">&quot;memo&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getSoftsWithType&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;softTypeMap&quot;</span>&gt;</span></span><br><span class="line">        select id,softname,version,description,adress,typename from soft join stype on soft.typeid=stype.typeid;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertSoft&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.deng.mybatis.model.Soft&quot;</span>&gt;</span></span><br><span class="line">        insert into soft(softname,version,description,adress,typeid) values(#&#123;softName&#125;,#&#123;version&#125;,#&#123;description&#125;,#&#123;adress&#125;,#&#123;typeid&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delSoftById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;integer&quot;</span>&gt;</span></span><br><span class="line">        delete from soft where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateSoftById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.deng.mybatis.model.Soft&quot;</span>&gt;</span></span><br><span class="line">        update soft set softname=#&#123;softName&#125;,version=#&#123;version&#125;,description=#&#123;description&#125;,adress=#&#123;adress&#125;,typeid=#&#123;typeid&#125; where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selAllSofts&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.deng.mybatis.model.Soft&quot;</span>&gt;</span></span><br><span class="line">        select * from soft</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selSoftByName&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.deng.mybatis.model.Soft&quot;</span>&gt;</span></span><br><span class="line">        select * from soft where softname like &#x27;%$&#123;value&#125;%&#x27;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selSoftById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.deng.mybatis.model.Soft&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;integer&quot;</span>&gt;</span></span><br><span class="line">        select * from soft where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>StypeMapper.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.deng.mybatis.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.deng.mybatis.model.Stype;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">StypeMapper</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">insertStype</span><span class="params">(Stype stype)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">delStypeById</span><span class="params">(<span class="type">int</span> typeid)</span>;</span><br><span class="line">    Stype <span class="title function_">selAllStypes</span><span class="params">()</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateStypeById</span><span class="params">(Stype stype)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>StypeMapper.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.deng.mybatis.mapper.StypeMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertStype&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.deng.mybatis.model.Stype&quot;</span>&gt;</span></span><br><span class="line">        insert into stype(typename ,memo) values(#&#123;typename&#125;,#&#123;memo&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delStypeById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete from stype where typeid=#&#123;typeid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateStypeById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.deng.mybatis.model.Stype&quot;</span>&gt;</span></span><br><span class="line">        update stype set typename=#&#123;typename&#125;,memo=#&#123;memo&#125; where typeid=#&#123;typeid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selAllStypes&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.deng.mybatis.model.Stype&quot;</span>&gt;</span></span><br><span class="line">        select * from stype</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Servlet-SoftServlet-java"><a href="#Servlet-SoftServlet-java" class="headerlink" title="Servlet-SoftServlet.java"></a>Servlet-SoftServlet.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.deng.mybatis.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.deng.mybatis.mapper.SoftMapper;</span><br><span class="line"><span class="keyword">import</span> com.deng.mybatis.model.Soft;</span><br><span class="line"><span class="keyword">import</span> com.deng.mybatis.model.Soft1;</span><br><span class="line"><span class="keyword">import</span> com.deng.mybatis.model.Stype;</span><br><span class="line"><span class="keyword">import</span> com.deng.mybatis.util.MybatisUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.RequestDispatcher;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="meta">@WebServlet(&quot;/&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SoftServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> request.getServletPath();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span> (action) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;/new&quot;</span>:</span><br><span class="line">                    showNewForm(request, response);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;/insert&quot;</span>:</span><br><span class="line">                    insertSoft(request, response);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;/delete&quot;</span>:</span><br><span class="line">                    deleteSoft(request, response);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;/edit&quot;</span>:</span><br><span class="line">                    showEditForm(request, response);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;/update&quot;</span>:</span><br><span class="line">                    updateSoft(request, response);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    listSoft(request, response);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServletException</span>(ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">listSoft</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span><span class="keyword">throws</span> SQLException, IOException, ServletException &#123;</span><br><span class="line">        SqlSession session=MybatisUtil.getSqlSession();</span><br><span class="line">        List&lt;Soft1&gt;listSoft=session.selectList(<span class="string">&quot;getSoftsWithType&quot;</span>);</span><br><span class="line">        request.setAttribute(<span class="string">&quot;listSoft&quot;</span>, listSoft);</span><br><span class="line">        HttpSession httpSession=request.getSession();</span><br><span class="line">        List&lt;Stype&gt;stypelist=session.selectList(<span class="string">&quot;selAllStypes&quot;</span>);</span><br><span class="line">        httpSession.setAttribute(<span class="string">&quot;stypelist&quot;</span>,stypelist);</span><br><span class="line">        RequestDispatcher dispatcher=</span><br><span class="line">                request.getRequestDispatcher(<span class="string">&quot;/soft-list.jsp&quot;</span>);</span><br><span class="line">        dispatcher.forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showNewForm</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">RequestDispatcher</span> <span class="variable">dispatcher</span> <span class="operator">=</span> request.getRequestDispatcher(<span class="string">&quot;/soft-form.jsp&quot;</span>);</span><br><span class="line">        dispatcher.forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showEditForm</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> SQLException, ServletException, IOException &#123;</span><br><span class="line">        <span class="type">Soft</span> <span class="variable">existingSoft</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Soft</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> Integer.parseInt(request.getParameter(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">        SqlSession session=MybatisUtil.getSqlSession();</span><br><span class="line">        existingSoft=session.selectOne(<span class="string">&quot;selSoftById&quot;</span>,id);</span><br><span class="line">        <span class="type">RequestDispatcher</span> <span class="variable">dispatcher</span> <span class="operator">=</span> request.getRequestDispatcher(<span class="string">&quot;/soft-form.jsp&quot;</span>);</span><br><span class="line">        request.setAttribute(<span class="string">&quot;soft&quot;</span>, existingSoft);</span><br><span class="line">        dispatcher.forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">insertSoft</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">softname</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;softName&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">version</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;version&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">description</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;description&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">adress</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;adress&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">typeid</span> <span class="operator">=</span> Integer.parseInt(request.getParameter(<span class="string">&quot;typeid&quot;</span>));</span><br><span class="line">        <span class="type">Soft</span> <span class="variable">soft</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Soft</span>(softname,version,description, adress,typeid);</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtil.getSqlSession();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> session.insert(<span class="string">&quot;insertSoft&quot;</span>, soft);</span><br><span class="line">        session.commit();</span><br><span class="line">        session.close();</span><br><span class="line">        response.sendRedirect(<span class="string">&quot;list&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateSoft</span><span class="params">(HttpServletRequest request,HttpServletResponse response)</span></span><br><span class="line">            <span class="keyword">throws</span> SQLException, IOException&#123;</span><br><span class="line">        <span class="type">Soft</span> <span class="variable">soft</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Soft</span>();</span><br><span class="line">        soft.setId(Integer.parseInt(request.getParameter(<span class="string">&quot;id&quot;</span>)));</span><br><span class="line">        soft.setSoftName(request.getParameter(<span class="string">&quot;softName&quot;</span>));</span><br><span class="line">        soft.setVersion(request.getParameter(<span class="string">&quot;version&quot;</span>));</span><br><span class="line">        soft.setDescription(request.getParameter(<span class="string">&quot;description&quot;</span>));</span><br><span class="line">        soft.setAdress(request.getParameter(<span class="string">&quot;adress&quot;</span>));</span><br><span class="line">        soft.setTypeid(Integer.parseInt(request.getParameter(<span class="string">&quot;typeid&quot;</span>)));</span><br><span class="line">        SqlSession session=MybatisUtil.getSqlSession();</span><br><span class="line">        <span class="type">int</span> i=session.update(<span class="string">&quot;updateSoftById&quot;</span>,soft);</span><br><span class="line">        session.commit();</span><br><span class="line">        session.close();</span><br><span class="line">        response.sendRedirect(<span class="string">&quot;list&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">deleteSoft</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> SQLException, IOException &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> Integer.parseInt(request.getParameter(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">       SqlSession session=MybatisUtil.getSqlSession();</span><br><span class="line">       <span class="type">int</span> i=session.delete(<span class="string">&quot;delSoftById&quot;</span>,id);</span><br><span class="line">       session.commit();</span><br><span class="line">       session.close();</span><br><span class="line">        response.sendRedirect(<span class="string">&quot;list&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="JSP页面"><a href="#JSP页面" class="headerlink" title="JSP页面"></a>JSP页面</h3><p>soft-list.jsp</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> prefix=<span class="string">&quot;c&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Soft Management Application&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot;</span> integrity=<span class="string">&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot;</span> crossorigin=<span class="string">&quot;anonymous&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;header&gt;</span><br><span class="line">    &lt;nav class=<span class="string">&quot;navbar navbar-expand-md navbar-dark&quot;</span> style=<span class="string">&quot;background-color: skyblue&quot;</span>&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;#&quot;</span> class=<span class="string">&quot;navbar-brand&quot;</span>&gt;实训平台&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;ul class=<span class="string">&quot;navbar-nav&quot;</span>&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=<span class="string">&quot;&lt;%=request.getContextPath()%&gt;/slist&quot;</span> class=<span class="string">&quot;nav-link&quot;</span>&gt;类别&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=<span class="string">&quot;&lt;%=request.getContextPath()%&gt;/list&quot;</span> class=<span class="string">&quot;nav-link&quot;</span>&gt;软件&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">&lt;/header&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;row&quot;</span>&gt;</span><br><span class="line">    &lt;!-- &lt;div class=<span class="string">&quot;alert alert-success&quot;</span> *ngIf=<span class="string">&#x27;message&#x27;</span>&gt;&#123;&#123;message&#125;&#125;</span><br><span class="line">    &lt;/div&gt; --&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;container&quot;</span>&gt;</span><br><span class="line">        &lt;h3 class=<span class="string">&quot;text-center&quot;</span>&gt;软件列表&lt;/h3&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;container text-left&quot;</span>&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;&lt;%=request.getContextPath()%&gt;/new&quot;</span> class=<span class="string">&quot;btn btn-success&quot;</span>&gt;增加软件&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;table class=<span class="string">&quot;table table-bordered&quot;</span>&gt;</span><br><span class="line">            &lt;thead&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th&gt;ID&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;名称&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;版本&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;简介&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;网址&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;类别&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;/thead&gt;</span><br><span class="line">            &lt;tbody&gt;</span><br><span class="line">            &lt;!-- <span class="keyword">for</span> (Todo todo: todos) &#123; --&gt;</span><br><span class="line">            &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;soft&quot;</span> items=<span class="string">&quot;$&#123;listSoft&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;c:out value=<span class="string">&quot;$&#123;soft.id&#125;&quot;</span> /&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;c:out value=<span class="string">&quot;$&#123;soft.softName&#125;&quot;</span> /&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;c:out value=<span class="string">&quot;$&#123;soft.version&#125;&quot;</span> /&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;c:out value=<span class="string">&quot;$&#123;soft.description&#125;&quot;</span> /&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;c:out value=<span class="string">&quot;$&#123;soft.adress&#125;&quot;</span> /&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">&lt;%--                        &lt;c:out value=<span class="string">&quot;$&#123;soft.typeid&#125;&quot;</span>/&gt;--%&gt;</span><br><span class="line">                        &lt;c:out value=<span class="string">&quot;$&#123;soft.stype.typename&#125;&quot;</span>/&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;a href=<span class="string">&quot;edit?id=&lt;c:out value=&#x27;$&#123;soft.id&#125;&#x27; /&gt;&quot;</span>&gt;编辑&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                        &lt;a href=<span class="string">&quot;delete?id=&lt;c:out value=&#x27;$&#123;soft.id&#125;&#x27;/&gt;&quot;</span>&gt;删除&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                        &lt;a href=<span class="string">&quot;&lt;c:out value=&#x27;$&#123;soft.adress&#125;&#x27; /&gt;&quot;</span>&gt;下载&lt;/a&gt;</span><br><span class="line">                    &lt;/td&gt;                &lt;/tr&gt;</span><br><span class="line">            &lt;/c:forEach&gt;</span><br><span class="line">            &lt;!-- &#125; --&gt;</span><br><span class="line">            &lt;/tbody&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;footer&gt;</span><br><span class="line">    &lt;p align=<span class="string">&quot;center&quot;</span>&gt;Copyright ©<span class="number">2022</span> deng &lt;/p&gt;</span><br><span class="line">&lt;/footer&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>soft-form.jsp</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;/head&gt;&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> prefix=<span class="string">&quot;c&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Soft Management Application&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot;</span> integrity=<span class="string">&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot;</span> crossorigin=<span class="string">&quot;anonymous&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;header&gt;</span><br><span class="line">    &lt;nav class=<span class="string">&quot;navbar navbar-expand-md navbar-dark&quot;</span> style=<span class="string">&quot;background-color: skyblue&quot;</span>&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;#&quot;</span> class=<span class="string">&quot;navbar-brand&quot;</span>&gt; 软件管理系统&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;ul class=<span class="string">&quot;navbar-nav&quot;</span>&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=<span class="string">&quot;&lt;%=request.getContextPath()%&gt;/list&quot;</span> class=<span class="string">&quot;nav-link&quot;</span>&gt;软件&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">&lt;/header&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;container col-md-5&quot;</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;card&quot;</span>&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;card-body&quot;</span>&gt;</span><br><span class="line">            &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;soft != null&#125;&quot;</span>&gt;</span><br><span class="line">            &lt;form action=<span class="string">&quot;update&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">                &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;soft == null&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;form action=<span class="string">&quot;insert&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">                    &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">                    &lt;caption&gt;</span><br><span class="line">                        &lt;h2&gt;</span><br><span class="line">                            &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;soft != null&#125;&quot;</span>&gt;</span><br><span class="line">                                编辑软件信息</span><br><span class="line">                            &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">                            &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;soft == null&#125;&quot;</span>&gt;</span><br><span class="line">                               增加软件</span><br><span class="line">                            &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">                        &lt;/h2&gt;</span><br><span class="line">                    &lt;/caption&gt;</span><br><span class="line">                    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;soft != null&#125;&quot;</span>&gt;</span><br><span class="line">                        &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;id&quot;</span> value=<span class="string">&quot;&lt;c:out value=&#x27;$&#123;soft.id&#125;&#x27; /&gt;&quot;</span> /&gt;</span><br><span class="line">                    &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">                    &lt;fieldset class=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">                        &lt;label&gt;软件名&lt;/label&gt; &lt;input type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;&lt;c:out value=&#x27;$&#123;soft.softName&#125;&#x27; /&gt;&quot;</span> class=<span class="string">&quot;form-control&quot;</span> name=<span class="string">&quot;softName&quot;</span> required=<span class="string">&quot;required&quot;</span>&gt;</span><br><span class="line">                    &lt;/fieldset&gt;</span><br><span class="line">                    &lt;fieldset class=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">                        &lt;label&gt;软件版本&lt;/label&gt; &lt;input type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;&lt;c:out value=&#x27;$&#123;soft.version&#125;&#x27; /&gt;&quot;</span> class=<span class="string">&quot;form-control&quot;</span> name=<span class="string">&quot;version&quot;</span>&gt;</span><br><span class="line">                    &lt;/fieldset&gt;</span><br><span class="line">                    &lt;fieldset class=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">                        &lt;label&gt;软件简介&lt;/label&gt; &lt;input type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;&lt;c:out value=&#x27;$&#123;soft.description&#125;&#x27; /&gt;&quot;</span> class=<span class="string">&quot;form-control&quot;</span> name=<span class="string">&quot;description&quot;</span>&gt;</span><br><span class="line">                    &lt;/fieldset&gt;</span><br><span class="line">                        &lt;fieldset class=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">                            &lt;label&gt;软件地址&lt;/label&gt; &lt;input type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;&lt;c:out value=&#x27;$&#123;soft.adress&#125;&#x27; /&gt;&quot;</span> class=<span class="string">&quot;form-control&quot;</span> name=<span class="string">&quot;adress&quot;</span>&gt;</span><br><span class="line">                        &lt;/fieldset&gt;</span><br><span class="line">                        &lt;fieldset class=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">                            &lt;label&gt;软件类型&lt;/label&gt;</span><br><span class="line">                            &lt;select name=<span class="string">&quot;typeid&quot;</span>&gt;</span><br><span class="line">                                &lt;option&gt;-----------&lt;/option&gt;</span><br><span class="line">                                &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;stype&quot;</span></span><br><span class="line">                                items=<span class="string">&quot;$&#123;stypelist&#125;&quot;</span>&gt;</span><br><span class="line">                                &lt;option value=<span class="string">&quot;$&#123;stype.typeid&#125;&quot;</span> id=<span class="string">&quot;$&#123;stype.typeid&#125;&quot;</span>&gt;$&#123;stype.typename&#125;&lt;/option&gt;</span><br><span class="line">                                &lt;/c:forEach&gt;</span><br><span class="line">                            &lt;/select&gt;</span><br><span class="line">                        &lt;/fieldset&gt;</span><br><span class="line">                    &lt;button type=<span class="string">&quot;submit&quot;</span> class=<span class="string">&quot;btn btn-success&quot;</span>&gt;提交&lt;/button&gt;</span><br><span class="line">                &lt;/form&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Python的飞机大战游戏的设计与实现</title>
    <url>/2023/06/26/%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98%E6%B8%B8%E6%88%8F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="基于Python的飞机大战游戏的设计与实现"><a href="#基于Python的飞机大战游戏的设计与实现" class="headerlink" title="基于Python的飞机大战游戏的设计与实现"></a>基于Python的飞机大战游戏的设计与实现</h1><p>邓小龙  2023.6</p>
<h2 id="目的与要求"><a href="#目的与要求" class="headerlink" title="目的与要求"></a>目的与要求</h2><p>​        通过本课程的学习，使得学生能够理解Python的编程模式，熟练运用Python内置函数与运算符、列表、元组、字典、集合等基本数据类型以及相关列表推导式、切片等语法来解决实际问题，熟练掌握Python分支结构、循环结构、函数设计以及类的设计与使用，熟练使用正则表达式处理字符串，同时使得学生掌握不同领域的Python扩展模块并能够解决文件操作、大数据处理、图形图像处理、数据库编程、科学计算可视化等领域中的实际问题。</p>
<h2 id="项目环境"><a href="#项目环境" class="headerlink" title="项目环境"></a>项目环境</h2><p>Python 3.11.2</p>
<p>PyCharm Community Edition 2022.3.2</p>
<h2 id="项目内容及完成步骤："><a href="#项目内容及完成步骤：" class="headerlink" title="项目内容及完成步骤："></a><strong>项目内容及完成步骤：</strong></h2><ol>
<li>确定游戏的基本功能和界面设计，包括主菜单、游戏场景、游戏结束等界面的设计与实现。</li>
<li>设计并实现玩家飞机和敌方飞机的类和方法，包括飞机的移动、射击、爆炸等动作的实现。</li>
<li>设计并实现子弹等游戏元素的类和方法，包括子弹的发射、碰撞检测、分数统计等功能的实现。</li>
<li>设计并实现碰撞检测、分数统计和游戏难度逐渐提高等功能的类和方法，包括游戏难度的控制、分数的计算、游戏结束的判断等功能。</li>
<li>设计并实现声音特效和游戏操作提示等界面和功能的类和方法，包括声音播放、游戏操作提示等功能的实现。</li>
<li>完成游戏程序的各个模块的测试和调试，保证游戏的稳定性和流畅性。</li>
</ol>
<h2 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h2><p>​        飞机大战游戏是一款经典的射击游戏，玩家控制一架飞机在屏幕上不断移动，并射击敌方飞机。本项目旨在使用Python语言实现一款基本的飞机大战游戏，使用户能够在终端上玩游戏。</p>
<h2 id="项目功能"><a href="#项目功能" class="headerlink" title="项目功能"></a>项目功能</h2><ul>
<li>飞船可左右移动，可发射子弹</li>
<li>敌机左右移动并且逐渐靠近</li>
<li>子弹击中敌机，敌机爆炸</li>
<li>最高分数显示</li>
<li>增加爆炸效果和声音效果</li>
<li>增加发射子弹的声音</li>
<li>增加了背景声音</li>
<li>增加消灭敌机声音</li>
<li>增加消灭舰队刷新音效</li>
<li>增加敌机撞击飞船音效</li>
</ul>
<h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaolonglongya/resources/img/202306021454545.png" alt="image-20230602145452447"></p>
<h2 id="项目代码"><a href="#项目代码" class="headerlink" title="项目代码"></a>项目代码</h2><p>略</p>
<h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h2><p><img src="https://cdn.jsdelivr.net/gh/xiaolonglongya/resources/img/202306012048441.png" alt="image-20230601204802015"></p>
<p><img src="https://cdn.jsdelivr.net/gh/xiaolonglongya/resources/img/202306012047443.png" alt="image-20230601204702009"></p>
<h2 id="项目成果"><a href="#项目成果" class="headerlink" title="项目成果"></a>项目成果</h2><ol>
<li>加载背景音乐和各种音效,比如子弹发射音效、击中音效等</li>
<li>实现了Sprite类,如Ship、Bullet、Alien、Explosion等,用于渲染图像和碰撞检测</li>
<li>实现了记分牌Scoreboard来显示分数、关卡和生命</li>
<li>实现了创建外星人舰队的方法_create_fleet,外星人会随着游戏进行移动和方向改变</li>
<li>实现了子弹和外星人的碰撞检测,子弹击中外星人会加分,外星人全部被消灭会提高游戏难度</li>
<li>实现了飞船被外星人撞到后的处理逻辑,飞船被撞导致生命值减一,若生命值为0游戏结束</li>
<li>实现了最高分记录和读取最高分记录的功能</li>
<li>实现了Play按钮来开始新游戏,点击按钮后会重置游戏设置和统计数据</li>
<li>使用pygame.mouse.set_visible(False)隐藏鼠标光标</li>
<li>使用pygame.display.flip()更新屏幕</li>
</ol>
<p>经过多次迭代和测试，我们成功实现了一款基于Python的飞机大战游戏。玩家可以通过键盘控制飞机的移动和发射子弹，与敌方飞机进行激烈的战斗。同时，游戏还实现了分数和关卡系统，记录玩家的得分和游戏进度，提高了游戏的趣味性和挑战性。</p>
<h2 id="项目总结"><a href="#项目总结" class="headerlink" title="项目总结"></a>项目总结</h2><p>本项目是一次非常有意义的尝试，通过实现飞机大战游戏，我们掌握了许多游戏开发的基本技能和知识。同时，项目也遇到了许多挑战和问题，如碰撞检测、游戏逻辑设计、游戏难度调整等，我们通过不断的尝试和调试，最终成功实现了游戏的各项功能。</p>
<p>在项目中，我们也深刻认识到了团队协作的重要性。在开发过程中，我们充分利用了团队成员的特长和优势，共同完成了项目的各项任务。同时，我们也学会了如何有效地沟通和合作，从而提高了工作效率和质量。</p>
<p>总之，本项目不仅让我们掌握了游戏开发的基本技能和知识，也锻炼了我们的团队协作能力和解决问题的能力。希望未来能继续探索更多有趣的项目和挑战。</p>
<p>项目地址(gitee)： <a href="https://gitee.com/xiaoshenlonggege/airplane-war.git">https://gitee.com/xiaoshenlonggege/airplane-war.git</a></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring MVC</title>
    <url>/2023/03/03/Spring-MVC/</url>
    <content><![CDATA[<h1 id="Spring-MVC"><a href="#Spring-MVC" class="headerlink" title="Spring MVC"></a>Spring MVC</h1><p>小龙龙 2022.5</p>
<h3 id="项目依赖"><a href="#项目依赖" class="headerlink" title="项目依赖"></a>项目依赖</h3><blockquote>
<?xml version="1.0" encoding="UTF-8"?>
<p><project xmlns="http://maven.apache.org/POM/4.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
http://maven.apache.org/xsd/maven-4.0.0.xsd"><br><modelVersion>4.0.0</modelVersion><br><groupId>com.zeng</groupId><br><artifactId>demo</artifactId><br><packaging>pom</packaging><br><version>1.0-SNAPSHOT</version><br><modules><br><module>servlet-demo</module><br><module>jsp-demo</module><br><module>jdbc-demo</module><br><module>mybatis-demo1</module><br><module>jsp-servlet-jdbc-mysql</module><br><module>spring-demo</module><br><module>spring-mvc-demo</module><br><module>spring-mvc-form</module><br><module>spring-mvc-form-validator</module><br></modules><br><dependencies></p>
<!--
https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
<dependency>
<groupId>javax.servlet</groupId>
<artifactId>javax.servlet-api</artifactId>
<version>4.0.1</version>
<scope>provided</scope>
</dependency>
<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
<dependency>
<groupId>org.mybatis</groupId>
<artifactId>mybatis</artifactId>
<version>3.4.6</version>
</dependency>
<!-- https://mvnrepository.com/artifact/mysql/mysql-connectorjava -->
<dependency>
<groupId>mysql</groupId>
<artifactId>mysql-connector-java</artifactId>
<version>8.0.22</version>
</dependency>
<!--
https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -
->
<dependency>
<groupId>org.apache.logging.log4j</groupId>
<artifactId>log4j-core</artifactId>
<version>2.17.1</version>
</dependency>
<!-- jsp-->
<!--
https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jspapi -->
<dependency>
<groupId>javax.servlet.jsp</groupId>
<artifactId>javax.servlet.jsp-api</artifactId>
<version>2.3.3</version>
<scope>provided</scope>
</dependency>
<!-- https://mvnrepository.com/artifact/javax.servlet/jstl -->
<dependency>
<groupId>javax.servlet</groupId>
<artifactId>jstl</artifactId>
<version>1.2</version>
</dependency>
<!-- https://mvnrepository.com/artifact/taglibs/standard -->
<dependency>
<groupId>taglibs</groupId>
<artifactId>standard</artifactId>
<version>1.1.2</version>
</dependency>
<!-- &lt;!&ndash;
https://mvnrepository.com/artifact/org.springframework/spring-context
&ndash;&gt;-->
<!-- <dependency>-->
Note that we are using spring-webmvc dependency for a Spring MVC web application.
Project Structure
<!-- <groupId>org.springframework</groupId>-->
<!-- <artifactId>spring-context</artifactId>-->
<!-- <version>5.3.18</version>-->
<!-- </dependency>-->
<!-- https://mvnrepository.com/artifact/org.mybatis/mybatisspring -->
<dependency>
<groupId>org.mybatis</groupId>
<artifactId>mybatis-spring</artifactId>
<version>2.0.7</version>
</dependency>
<!--
https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
<dependency>
<groupId>org.springframework</groupId>
<artifactId>spring-webmvc</artifactId>
<version>5.3.18</version>
</dependency>
</dependencies>
<properties>
<maven.compiler.source>8</maven.compiler.source>
<maven.compiler.target>8</maven.compiler.target>
</properties>
</project>
</blockquote>
<h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220531140721481.png" alt="image-20220531140721481"></p>
<p>Model - User.java </p>
<p>Views - user.jsp, users.jsp </p>
<p>Controller - UserController.java </p>
<p><strong>Spring Configuration - MVCConfig.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.deng.springmvc.form.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.view.InternalResourceViewResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.view.JstlView;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;</span></span><br><span class="line"><span class="meta">        &quot;com.deng.springmvc.form&quot;</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MVCConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> InternalResourceViewResolver <span class="title function_">resolver</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">InternalResourceViewResolver</span> <span class="variable">resolver</span> <span class="operator">=</span> <span class="keyword">new</span></span><br><span class="line">                <span class="title class_">InternalResourceViewResolver</span>();</span><br><span class="line">        resolver.setViewClass(JstlView.class);</span><br><span class="line">        resolver.setPrefix(<span class="string">&quot;/WEB-INF/views/&quot;</span>);</span><br><span class="line">        resolver.setSuffix(<span class="string">&quot;.jsp&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> resolver;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> &#123;</span><br><span class="line">        registry</span><br><span class="line">                .addResourceHandler(<span class="string">&quot;/resources/**&quot;</span>)</span><br><span class="line">                .addResourceLocations(<span class="string">&quot;/resources/&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Servlet-Container-Initialization-SpringMvcDispatcherServletInitializer-java"><a href="#Servlet-Container-Initialization-SpringMvcDispatcherServletInitializer-java" class="headerlink" title="Servlet Container Initialization - SpringMvcDispatcherServletInitializer.java"></a>Servlet Container Initialization - SpringMvcDispatcherServletInitializer.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.deng.springmvc.form.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringMvcDispatcherServletInitializer</span> <span class="keyword">extends</span> <span class="title class_">AbstractAnnotationConfigDispatcherServletInitializer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class &lt;?&gt; [] getRootConfigClasses() &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class &lt;?&gt; [] getServletConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123;</span><br><span class="line">                MVCConfig.class</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String[] getServletMappings() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;</span><br><span class="line">                <span class="string">&quot;/&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Model-Class-User-java"><a href="#Model-Class-User-java" class="headerlink" title="Model Class - User.java"></a>Model Class - User.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.deng.springmvc.form.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> receivePaper;</span><br><span class="line">    <span class="keyword">private</span> String[] favoriteFrameworks;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> String favoriteNumber;</span><br><span class="line">    <span class="keyword">private</span> String country;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAddress</span><span class="params">(String address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isReceivePaper</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> receivePaper;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setReceivePaper</span><span class="params">(<span class="type">boolean</span> receivePaper)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.receivePaper = receivePaper;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String[] getFavoriteFrameworks() &#123;</span><br><span class="line">        <span class="keyword">return</span> favoriteFrameworks;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFavoriteFrameworks</span><span class="params">(String[] favoriteFrameworks)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.favoriteFrameworks = favoriteFrameworks;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getFavoriteNumber</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> favoriteNumber;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFavoriteNumber</span><span class="params">(String favoriteNumber)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.favoriteNumber = favoriteNumber;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCountry</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> country;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCountry</span><span class="params">(String country)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.country = country;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Controller-Class-UserController-java"><a href="#Controller-Class-UserController-java" class="headerlink" title="Controller Class - UserController.java"></a>Controller Class - UserController.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.deng.springmvc.form.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.deng.springmvc.form.model.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.ModelMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ModelAttribute;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/user&quot;, method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">user</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setFavoriteFrameworks((<span class="keyword">new</span> <span class="title class_">String</span>[] &#123;</span><br><span class="line">                <span class="string">&quot;Spring MVC&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Struts 2&quot;</span></span><br><span class="line">        &#125;));</span><br><span class="line">        user.setGender(<span class="string">&quot;M&quot;</span>);</span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>(<span class="string">&quot;user&quot;</span>, <span class="string">&quot;command&quot;</span>,</span><br><span class="line">                user);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/addUser&quot;, method = RequestMethod.POST)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">addUser</span><span class="params">(<span class="meta">@ModelAttribute(&quot;SpringWeb&quot;)</span> User user,</span></span><br><span class="line"><span class="params">                          ModelMap model)</span> &#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;username&quot;</span>, user.getUsername());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;password&quot;</span>, user.getPassword());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;address&quot;</span>, user.getAddress());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;receivePaper&quot;</span>, user.isReceivePaper());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;favoriteFrameworks&quot;</span>,</span><br><span class="line">                user.getFavoriteFrameworks());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;gender&quot;</span>, user.getGender());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;favoriteNumber&quot;</span>, user.getFavoriteNumber());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;country&quot;</span>, user.getCountry());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;users&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@ModelAttribute(&quot;webFrameworkList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object[] getWebFrameworkList() &#123;</span><br><span class="line">        List&lt; String &gt; webFrameworkList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt; String &gt;();</span><br><span class="line">        webFrameworkList.add(<span class="string">&quot;Spring MVC&quot;</span>);</span><br><span class="line">        webFrameworkList.add(<span class="string">&quot;Struts 1&quot;</span>);</span><br><span class="line">        webFrameworkList.add(<span class="string">&quot;Struts 2&quot;</span>);</span><br><span class="line">        webFrameworkList.add(<span class="string">&quot;Apache Wicket&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> webFrameworkList.toArray();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@ModelAttribute(&quot;numbersList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List &lt; String &gt; getNumbersList() &#123;</span><br><span class="line">        List &lt; String &gt; numbersList = <span class="keyword">new</span> <span class="title class_">ArrayList</span> &lt; String &gt; ();</span><br><span class="line">        numbersList.add(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        numbersList.add(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">        numbersList.add(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">        numbersList.add(<span class="string">&quot;4&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> numbersList;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@ModelAttribute(&quot;countryList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt; String, String &gt; getCountryList() &#123;</span><br><span class="line">        Map &lt; String, String &gt; countryList = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt; String, String</span><br><span class="line">                &gt;();</span><br><span class="line">        countryList.put(<span class="string">&quot;US&quot;</span>, <span class="string">&quot;United States&quot;</span>);</span><br><span class="line">        countryList.put(<span class="string">&quot;CH&quot;</span>, <span class="string">&quot;China&quot;</span>);</span><br><span class="line">        countryList.put(<span class="string">&quot;SG&quot;</span>, <span class="string">&quot;Singapore&quot;</span>);</span><br><span class="line">        countryList.put(<span class="string">&quot;MY&quot;</span>, <span class="string">&quot;Malaysia&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> countryList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Views-user-jsp-and-users-jsp"><a href="#Views-user-jsp-and-users-jsp" class="headerlink" title="Views - user.jsp and users.jsp"></a>Views - user.jsp and users.jsp</h3><p>user.jsp</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%<span class="meta">@taglib</span> uri = <span class="string">&quot;http://www.springframework.org/tags/form&quot;</span> prefix =</span><br><span class="line">        <span class="string">&quot;form&quot;</span>%&gt;&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Spring MVC Form Handling&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;User Information&lt;/h2&gt;</span><br><span class="line">&lt;form:<span class="type">form</span> <span class="variable">method</span> <span class="operator">=</span> <span class="string">&quot;POST&quot;</span> action = <span class="string">&quot;addUser&quot;</span>&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">label</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;username&quot;</span>&gt;User Name&lt;/form:label&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">input</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;username&quot;</span> /&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">label</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;password&quot;</span>&gt;Password&lt;/form:label&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">password</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;password&quot;</span> /&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">label</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;address&quot;</span>&gt;Address&lt;/form:label&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">textarea</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;address&quot;</span> rows = <span class="string">&quot;5&quot;</span> cols = <span class="string">&quot;30&quot;</span></span><br><span class="line">                /&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">label</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;receivePaper&quot;</span>&gt;Subscribe</span><br><span class="line">                    Newsletter&lt;/form:label&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">checkbox</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;receivePaper&quot;</span> /&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">label</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;favoriteFrameworks&quot;</span>&gt;Favorite Web</span><br><span class="line">                    Frameworks&lt;/form:label&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">checkboxes</span> <span class="variable">items</span> <span class="operator">=</span> <span class="string">&quot;$&#123;webFrameworkList&#125;&quot;</span> path =</span><br><span class="line">                        <span class="string">&quot;favoriteFrameworks&quot;</span> /&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">label</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;gender&quot;</span>&gt;Gender&lt;/form:label&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">radiobutton</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;gender&quot;</span> value = <span class="string">&quot;M&quot;</span> label =</span><br><span class="line">                        <span class="string">&quot;Male&quot;</span> /&gt;</span><br><span class="line">                &lt;form:<span class="type">radiobutton</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;gender&quot;</span> value = <span class="string">&quot;F&quot;</span> label =</span><br><span class="line">                        <span class="string">&quot;Female&quot;</span> /&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">label</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;favoriteNumber&quot;</span>&gt;Favorite</span><br><span class="line">                    Number&lt;/form:label&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">radiobuttons</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;favoriteNumber&quot;</span> items =</span><br><span class="line">                        <span class="string">&quot;$&#123;numbersList&#125;&quot;</span> /&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">label</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;country&quot;</span>&gt;Country&lt;/form:label&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;form:<span class="type">select</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;country&quot;</span>&gt;</span><br><span class="line">                    &lt;form:<span class="type">option</span> <span class="variable">value</span> <span class="operator">=</span> <span class="string">&quot;NONE&quot;</span> label = <span class="string">&quot;Select&quot;</span>/&gt;</span><br><span class="line">                    &lt;form:<span class="type">options</span> <span class="variable">items</span> <span class="operator">=</span> <span class="string">&quot;$&#123;countryList&#125;&quot;</span> /&gt;</span><br><span class="line">                &lt;/form:select&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;<span class="type">td</span> <span class="variable">colspan</span> <span class="operator">=</span> <span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">                &lt;<span class="type">input</span> <span class="variable">type</span> <span class="operator">=</span> <span class="string">&quot;submit&quot;</span> value = <span class="string">&quot;Submit&quot;</span>/&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/form:form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>users.jsp</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%<span class="meta">@taglib</span> uri = <span class="string">&quot;http://www.springframework.org/tags/form&quot;</span> prefix =</span><br><span class="line">        <span class="string">&quot;form&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Spring MVC Form Handling&lt;/title&gt;</span><br><span class="line">    &lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;Submitted User Information&lt;/h2&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Username&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;$&#123;username&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Password&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;$&#123;password&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Address&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;$&#123;address&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Subscribed to Newsletter&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;$&#123;receivePaper&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Favorite Web Frameworks&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">            &lt;% String[] favoriteFrameworks =</span><br><span class="line">                    (String[])request.getAttribute(<span class="string">&quot;favoriteFrameworks&quot;</span>);</span><br><span class="line">                <span class="keyword">for</span>(String framework: favoriteFrameworks) &#123;</span><br><span class="line">                    out.println(framework);</span><br><span class="line">                &#125;</span><br><span class="line">            %&gt;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Gender&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;$&#123;(gender==<span class="string">&quot;M&quot;</span>? <span class="string">&quot;Male&quot;</span> : <span class="string">&quot;Female&quot;</span>)&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Favourite Number&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;$&#123;favoriteNumber&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Country&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;$&#123;country&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h4><p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220531141606482.png" alt="image-20220531141606482"></p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20220531141623359.png" alt="image-20220531141623359"></p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>我的实习项目开源啦</title>
    <url>/2023/06/27/%E6%88%91%E7%9A%84%E5%AE%9E%E4%B9%A0%E9%A1%B9%E7%9B%AE%E5%BC%80%E6%BA%90%E5%95%A6/</url>
    <content><![CDATA[<h1 id="实习项目—–基于springboot的晴川医疗管家的设计与实现"><a href="#实习项目—–基于springboot的晴川医疗管家的设计与实现" class="headerlink" title="实习项目—–基于springboot的晴川医疗管家的设计与实现"></a>实习项目—–基于springboot的晴川医疗管家的设计与实现</h1><p>项目地址：<a href="https://gitee.com/xiaoshenlonggege/springboot_demo_qingchuanpe">springboot_demo_qingchuanpe: 基于springboot的医疗管家系统 (gitee.com)</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/xiaolonglongya/resources/img/202306272105726.png" alt="image-20230627210458287"></p>
]]></content>
      <tags>
        <tag>实习</tag>
      </tags>
  </entry>
  <entry>
    <title>用*画菱形</title>
    <url>/2023/03/21/%E7%94%A8-%E7%94%BB%E8%8F%B1%E5%BD%A2/</url>
    <content><![CDATA[<h1 id="用-画一个菱形"><a href="#用-画一个菱形" class="headerlink" title="用*画一个菱形"></a>用*画一个菱形</h1><p>邓小龙 2023.3.21</p>
<p>今天，老师留了一个作业—用*画一个菱形，要求用n的大小来决定菱形的大小。</p>
<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入菱形的大小：&quot;</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; &quot;</span>*(n-i) + <span class="string">&quot;* &quot;</span>*i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; &quot;</span>*(n-i) + <span class="string">&quot;* &quot;</span>*i)</span><br></pre></td></tr></table></figure>

<p>其中，输入指定大小的菱形后，首先通过 for 循环来控制上半部分的“”号的行数，然后通过 print 函数输出每一行的“”号。第一层循环控制行数，第二层循环控制列数。</p>
<p>接下来，通过一个类似的 for 循环，控制下半部分的“*”号的行数和列数，形成菱形的形状。由于下半部分是上半部分的倒置，所以第二个循环的三个参数分别为 n-1（开始为倒数第二行），0（结束为第一行），-1（表示从最后一个元素开始递减）。</p>
<p>输出结果举例：</p>
<p><img src="https://cdn.staticaly.com/gh/xiaolonglongya/resources@main/images/image-20230321163827850.png" alt="image-20230321163827850"></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫---爬取网页数据</title>
    <url>/2023/04/14/%E7%88%AC%E8%99%AB-%E7%88%AC%E5%8F%96%E7%BD%91%E9%A1%B5%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="用python爬取网站的数据"><a href="#用python爬取网站的数据" class="headerlink" title="用python爬取网站的数据"></a>用python爬取网站的数据</h1><p>今天老师留了一个爬虫作业，用python爬取网页 (<a href="https://ssr1.scrape.center/">https://ssr1.scrape.center/</a>) 的数据</p>
<p>这是代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://ssr1.scrape.center/&#x27;</span></span><br><span class="line">html = requests.get(url).text</span><br><span class="line">doc = pq(html)</span><br><span class="line">items = doc(<span class="string">&#x27;.el-card&#x27;</span>).items()</span><br><span class="line"></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;movies.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">    name = item.find(<span class="string">&#x27;a&gt;h2&#x27;</span>).text()</span><br><span class="line">    file.write(<span class="string">f&#x27;名称:<span class="subst">&#123;name&#125;</span>\n&#x27;</span>)</span><br><span class="line">    categories = [item.text() <span class="keyword">for</span> item <span class="keyword">in</span> item.find(<span class="string">&#x27;.categories button span&#x27;</span>).items()]</span><br><span class="line">    file.write(<span class="string">f&#x27;类别:<span class="subst">&#123;categories&#125;</span>\n&#x27;</span>)</span><br><span class="line">    published_at = item.find(<span class="string">&#x27;info:contains(上映)&#x27;</span>).text()</span><br><span class="line">    published_at = re.search(<span class="string">&#x27;(\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;)&#x27;</span>, published_at).group(<span class="number">1</span>) \</span><br><span class="line">        <span class="keyword">if</span> published_at <span class="keyword">and</span> re.search(<span class="string">&#x27;(\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;)&#x27;</span>, published_at) <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">    file.write(<span class="string">f&#x27;上映时间:<span class="subst">&#123;published_at&#125;</span>\n&#x27;</span>)</span><br><span class="line">    score = item.find(<span class="string">&#x27;p.score&#x27;</span>).text()</span><br><span class="line">    file.write(<span class="string">f&#x27;评分:<span class="subst">&#123;score&#125;</span>\n&#x27;</span>)</span><br><span class="line">    file.write(<span class="string">f&#x27;<span class="subst">&#123;<span class="string">&quot;=&quot;</span> * <span class="number">50</span>&#125;</span>&#x27;</span>)</span><br><span class="line">file.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>但是运行时就傻了眼，居然报错了</p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202304172026310.png" alt="image-20230414182913882"></p>
<p>于是我就去网上查找原因：请求异常，连接超过最大连接次数，最后是因为证书认证失败</p>
<p>并在网上找到了解决方法：</p>
<p><strong>给requests.get()传入 verify=False 避免ssl认证。</strong></p>
<p>就是把</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html = requests.get(url).text</span><br></pre></td></tr></table></figure>

<p>改成</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html = requests.get(url,verify=<span class="literal">False</span>).text</span><br></pre></td></tr></table></figure>

<p>再运行</p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202304172027139.png" alt="image-20230414183526863"></p>
<p>还有报错！！！</p>
<p>大概意思就是：不安全请求警告：正在发出未验证的HTTPS请求。强烈建议添加证书验证。</p>
<p>网上给了三种方法，我这儿就试验一种</p>
<p>就是加上</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib3</span><br><span class="line">urllib3.disable_warnings()</span><br></pre></td></tr></table></figure>

<p>再次运行，出来啦！！！</p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202304172027701.png" alt="image-20230414183915920"></p>
<p>而且文件夹里也有了爬取到的数据</p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202304172027557.png" alt="image-20230414184042022"></p>
<p>感谢CSDN博主<br>Xin学数据 (<a href="https://blog.csdn.net/qq_45476428">https://blog.csdn.net/qq_45476428</a>) 的分享</p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次软考模拟测试错题笔记</title>
    <url>/2023/05/18/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%BD%AF%E8%80%83%E6%A8%A1%E6%8B%9F%E6%B5%8B%E8%AF%95%E9%94%99%E9%A2%98%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="记一次软考程序员模拟测试的错题笔记"><a href="#记一次软考程序员模拟测试的错题笔记" class="headerlink" title="记一次软考程序员模拟测试的错题笔记"></a>记一次软考程序员模拟测试的错题笔记</h1><p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182053597.png" alt="image-20230518205300561"></p>
<p>直接寻址：直接将操作数放在指令当中   <strong>最快寻址方式</strong></p>
<p>间接寻址：意味着指令中给出的地址A不是操作数的地址，而是存放操作数地址的主存单元的地址，简称<strong>操作数地址的地址。</strong></p>
<p>寄存器寻址:，操作数在CPU的寄存器中。</p>
<p>寄存器间接寻址:，操作数的地址在CPU的寄存器中，还需要访问一次内存来得到操作数。</p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182104816.png" alt="image-20230518210450778"></p>
<p>数据总线的宽度是指<strong>通过它一次所能传递的二进制位数</strong></p>
<p>地址总线的宽度是指<strong>CPU能直接访问的主存单元</strong></p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182111461.png" alt="image-20230518211158426"></p>
<p><strong>主动攻击包括拒绝服务攻击、信息篡改、资源使用、欺骗等攻击方法。</strong><br><strong>被动攻击包括嗅探、信息收集、窃听等攻击方法。</strong></p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182113271.png" alt="image-20230518211355227"></p>
<p><strong>在Windows系统中的磁盘碎片整理程序可以分析本地卷，使每个文件或文件夹占用卷上连续的磁盘空间</strong>，合并卷上的可用空间使其成为连续的空闲区域，这样系统就可以更有效地访问文件或文件夹，以及更有效地保存新的文件和文件夹。通过合并文件和文件夹，磁盘碎片整理程序还将合并卷上的可用空间，以减少新文件出现碎片的可能性<strong>。合并文件和文件夹碎片的过程称为碎片整理。</strong></p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182118998.png" alt="image-20230518211855953"></p>
<p>嵌入式操作系统运行在嵌入式智能芯片环境中，对整个智能芯片以及它所操作、控制的各种部件装置等资源进行统一协调、处理、指挥和控制。其主要特点:<br>①<strong>微型化</strong>。从性能和成本角度考虑，<strong>希望占用资源和系统代码量少</strong>，如内存少、字长短、运行速度有限、能源少(用微小型电池)。<br>②<strong>可定制</strong>。从减少成本和缩短研发周期考虑，<strong>要求嵌入式操作系统能运行在不同的微处理器平台上</strong>，能针对硬件变化进行结构与功能上的配置，以满足不同应用需要。<br>③<strong>实时性</strong>。嵌入式操作系统主要应用于过程控制、数据采集、传输通信、多媒体信息及关键要害领域需要迅速响应的场合，所以对实时性要求高。<br>④<strong>可靠性</strong>。系统构件、模块和体系结构必须达到应有的可靠性，对关键要害应用还要提供容错和防故障措施。</p>
<p>⑤<strong>易移植性</strong>。为了提高系统的易移植性，通常采用<strong>硬件抽象层(<strong>HardwareAbstraction Level;HAL)和</strong>板级支持包</strong>(Board Support Package，BSP)的底层设计技术。</p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182123988.png" alt="image-20230518212336944"></p>
<p>在这个题中，<strong>P1虽然释放了扫描仪，但P1并没有释放CPU资源</strong>，且没有提到时间片到，因此P1仍然是运行状态。此时，<strong>P4处于就绪状态</strong></p>
<p><strong>值调用是将实参的值传给形参</strong></p>
<p><strong>引用调用是将实参的地址传给形参</strong></p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182129127.png" alt="image-20230518212901089"></p>
<p><strong>线性表采用单链表存储时</strong>，<strong>存取元素时只能从头指出发顺序地查找元素</strong>，可根据需要动态申请和释放结点，也不要求结点的存储地址连续。<strong>在单链表上插入和删除元素</strong>只需要修改逻辑上相关的元素所在结点的指针域，而<strong>不需要移动元素。</strong></p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182132475.png" alt="image-20230518213201434"></p>
<p>构造的哈夫曼树如下：</p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182139175.png" alt="image-20230518213939143"></p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182143922.png" alt="image-20230518214300881"></p>
<p><strong>有序数组二分查找效率最高</strong></p>
<p><strong>无序数组哈希查找效率最高</strong></p>
<p><strong>一个对象通常由对象标识、属性和方法组成</strong></p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182145648.png" alt="image-20230518214535608"></p>
<p><strong>行为事物</strong>也称作动作事物，是UML中动态的部分，代表时间和空间上的动作。有三类行为事物:<strong>交互、状态机和活动。</strong></p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182148504.png" alt="image-20230518214805463"></p>
<p><strong>序列图</strong>主要用来<strong>更直观的表现各个对象交互的时间顺序</strong>，将体现的重点放在<strong>以时间为参照</strong>，各个对象发送、接收消息，处理消息，返回消息的时间流程顺序，<strong>也称为时序图。</strong></p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182152761.png" alt="image-20230518215214726"></p>
<p>数据模型(Data Model)）是现实世界数据特征的抽象，或者说是现实世界的数据模拟。数据库中，用数据模型来抽象地表示现实世界的数据和信息。<br><strong>数据模型的三要素是:数据结构、数据操作及完整性约束条件。</strong></p>
<p><img src="https://raw.githubusercontent.com/xiaolonglongya/resources/main/img/202305182159486.png" alt="image-20230518215938446"></p>
<p>1-9页共有9个数字;10-99共有2*(99-10+1) =180个数字，而接下来100-199共有3*(199-100+1) =300个数字，200-299共有3*(299-200+1) =300个数字，此时总共的数字有:9+180+300+300=789个数字，总共900个数字，即还有900-789=111个数字，此时都是三位数的数字，所l以还剩下37个数字，从300开始，到336结束，刚好37个数字。</p>
]]></content>
      <tags>
        <tag>软考</tag>
      </tags>
  </entry>
  <entry>
    <title>重学Java之二分查找</title>
    <url>/2023/11/08/%E9%87%8D%E5%AD%A6Java%E4%B9%8B%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</url>
    <content><![CDATA[<h1 id="重学Java之二分查找"><a href="#重学Java之二分查找" class="headerlink" title="重学Java之二分查找"></a>重学Java之二分查找</h1><p>实现思路：</p>
<ol>
<li><p>前提：有已排序数据A  (假设已经做好)</p>
</li>
<li><p>定义左右边界L,R，确认搜索范围，循环执行二分查找</p>
</li>
<li><p>获取中间索引M=(L+R)/2    M=(L+R)&gt;&gt;&gt;1 （防止数组溢出）</p>
</li>
<li><p>将中间值M与待搜索值T进行比较：</p>
<p>A[M]==T 表示找到，返回中间索引</p>
<p>A[M]&gt;T   中间值右侧元素都大于T，无需比较，中间索引左边去找，将M-1设置为右边界，即R=M-1</p>
<p>A[M]&lt;T   中间值左侧元素都小于T，无需比较，中间索引右边去找，将M+1设置为左边界，即L=M+1</p>
</li>
<li><p>当L&gt;R时，表示没有找到，应结束循环</p>
</li>
</ol>
<p>代码实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">BinarySearch</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">L</span> <span class="operator">=</span> <span class="number">0</span>, R = arr.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (L &lt;= R) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">M</span> <span class="operator">=</span> (L + R) &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (arr[M] == target) &#123;</span><br><span class="line">            <span class="keyword">return</span> M;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[M] &gt; target) &#123;</span><br><span class="line">            R=M-<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            L=M+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>重学Java之选择排序</title>
    <url>/2023/11/08/%E9%87%8D%E5%AD%A6Java%E4%B9%8B%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="重学Java之选择排序"><a href="#重学Java之选择排序" class="headerlink" title="重学Java之选择排序"></a>重学Java之选择排序</h1><p>什么是选择排序？</p>
<p>将数组分为两个子集，排序的和未排序的，每一轮从未排序的子集中<strong>选出最小的元素，放入排序子集</strong><br>重复以上步骤，直到整个数组有序</p>
<p><strong>代码实现：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//选择排序</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">SelectionSort</span><span class="params">(<span class="type">int</span>[] a)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">s</span> <span class="operator">=</span> i;<span class="comment">//表示最小元素的索引</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> s + <span class="number">1</span>; j &lt; a.length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[s] &gt; a[j]) &#123;</span><br><span class="line">                s = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (s != i) &#123;</span><br><span class="line">            swap(a,s,i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">    arr[i] = arr[j];</span><br><span class="line">    arr[j] = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>与冒泡排序比较：</strong></p>
<p>1.二者平均时间复杂度都是O(n^2)</p>
<p>2.选择排序一般要快于冒泡，因为其交换次数少</p>
<p>3.但如果集合有序度高，冒泡优于选择</p>
<p>4.冒泡属于稳定排序算法，而选择属于不稳定排序</p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>重学Java之冒泡排序</title>
    <url>/2023/11/08/%E9%87%8D%E5%AD%A6Java%E4%B9%8B%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="重学Java之冒泡排序"><a href="#重学Java之冒泡排序" class="headerlink" title="重学Java之冒泡排序"></a>重学Java之冒泡排序</h1><p><strong>什么是冒泡排序？</strong></p>
<p>冒泡排序是一种简单的排序算法，它重复地遍历要排序的数组，一次比较两个元素，如果它们的顺序错误就把它们交换过来。遍历数组的工作会重复进行直到没有再需要交换为止，也就是说该数组已经排序完成。</p>
<p><strong>实现思路：</strong></p>
<p>依次比较数组中相邻两个元素大小，若a[i]&gt;a[i+1]，则交换两个元素，两两都比较一遍称为一轮冒泡，结果是让最大的元素排至最后<br>重复以上步骤，直到整个数组有序</p>
<p><strong>代码实现：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">BubbleSort</span><span class="params">(<span class="type">int</span>[] a)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> a.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">last</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//表示最后一次交换位置的索引</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] &gt; a[i + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> a[i];</span><br><span class="line">                a[i] = a[i + <span class="number">1</span>];</span><br><span class="line">                a[i + <span class="number">1</span>] = t;</span><br><span class="line">                last = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        n = last;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>重学Java之插入排序</title>
    <url>/2023/11/09/%E9%87%8D%E5%AD%A6Java%E4%B9%8B%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="重学Java之插入排序"><a href="#重学Java之插入排序" class="headerlink" title="重学Java之插入排序"></a>重学Java之插入排序</h1><p>什么是插入排序？</p>
<p>将数组分为两个区域，排序区域和未排序区域，每一轮从未排序区域中取出第一个元素，插入到排序区域（需保证顺序)</p>
<p>重复以上步骤，直到整个数组有序</p>
<p><strong>代码实现：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">Insert</span><span class="params">(<span class="type">int</span>[] a)</span> &#123;</span><br><span class="line">    <span class="comment">//i 代表插入元素的索引</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> a[i];<span class="comment">// 代表待插入的元素值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i - <span class="number">1</span>;<span class="comment">// 代表已排序区域的索引</span></span><br><span class="line">        <span class="keyword">while</span> (j &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (t &lt; a[j]) &#123;</span><br><span class="line">                a[j + <span class="number">1</span>] = a[j];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//退出循环，减少比较次数</span></span><br><span class="line">            &#125;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        a[j + <span class="number">1</span>] = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>优化方式：</strong></p>
<p>1.待插入元素进行比较时，遇到比自己小的元素，就代表</p>
<p>找到了插入位置，无需进行后续比较</p>
<p>2.插入时可以直接移动元素，而不是交换元素</p>
<p><strong>与选择排序比较</strong><br>1.二者平均时间复杂度都是O(n^2)</p>
<p>2.大部分情况下，插入都略优于选泽</p>
<p>3.有序集合插入的时间复杂度为O(n)</p>
<p>4.插入属于稳定排序算法，而选择属于不稳定排序</p>
<p><strong>注意：</strong></p>
<p>希尔排序是插入排序的优化，只是间隙不同，可以减少移动次数！！！</p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>重学Java之快速排序</title>
    <url>/2023/11/09/%E9%87%8D%E5%AD%A6Java%E4%B9%8B%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="重学Java之快速排序"><a href="#重学Java之快速排序" class="headerlink" title="重学Java之快速排序"></a>重学Java之快速排序</h1><p>每一轮排序选择一个基准点(pivot)进行分区</p>
<p>​    1.让小于基准点的元素的进入一个分区，大于基准点的元素的进入另一个分区</p>
<p>​    2.当分区完成时，基准点元素的位置就是其最终位置</p>
<p>在子分区内重复以上过程，直至子分区元素个数少于等于1，这体现的是<strong>分而治之</strong>的思想(divide-and-conquer)</p>
<h3 id="单边循环快排-lomuto洛穆托分区方案"><a href="#单边循环快排-lomuto洛穆托分区方案" class="headerlink" title="单边循环快排(lomuto洛穆托分区方案)"></a>单边循环快排(lomuto洛穆托分区方案)</h3><p>选择最右元素作为基准点元素</p>
<p>j指针负责找到比基准点小的元素，一旦找到则与i进行交换</p>
<p>i指针维护小于基准点元素的边界，也是每次交换的目标索引</p>
<p>最后基准点与i交换，i即为分区位置</p>
<p><strong>代码实现：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">   <span class="comment">//递归</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">QuickSort</span><span class="params">(<span class="type">int</span>[] a, <span class="type">int</span> l, <span class="type">int</span> h)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (l &gt;= h) &#123;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="type">int</span> <span class="variable">p</span> <span class="operator">=</span> Partition(a, l, h);</span><br><span class="line">       QuickSort(a, l, p - <span class="number">1</span>);</span><br><span class="line">       QuickSort(a, p + <span class="number">1</span>, h);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//分区</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">Partition</span><span class="params">(<span class="type">int</span>[] a, <span class="type">int</span> l, <span class="type">int</span> h)</span> &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">pv</span> <span class="operator">=</span> a[h];<span class="comment">//基准点元素</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> l;</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> l; j &lt; h; j++) &#123;</span><br><span class="line">           <span class="keyword">if</span> (a[j] &lt; pv) &#123;</span><br><span class="line">                   swap(a, i, j);</span><br><span class="line">               i++;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">           swap(a, h, i);</span><br><span class="line">       System.out.println(Arrays.toString(a) + <span class="string">&quot;  i:&quot;</span> + i);</span><br><span class="line">       <span class="comment">//返回值代表基准点元素的正确索引，用它可以确定下一轮分区的上下边界</span></span><br><span class="line">       <span class="keyword">return</span> i;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//交换</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">       arr[i] = arr[j];</span><br><span class="line">       arr[j] = temp;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>



<h3 id="双边循环快排-并不完全等价于hoare霍尔分区方案）"><a href="#双边循环快排-并不完全等价于hoare霍尔分区方案）" class="headerlink" title="双边循环快排(并不完全等价于hoare霍尔分区方案）"></a>双边循环快排(并不完全等价于hoare霍尔分区方案）</h3><p>选择最左元素作为基准点元素</p>
<p>j指针负责从右向左找比基准点小的元素，i指针负责从左向右找比基准点大的元素，一旦找到二者交换，直至i,j相交</p>
<p>最后基准点与i(此时i与j相等）交换，i即为分区位置</p>
<p><strong>代码实现：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">partition</span><span class="params">(<span class="type">int</span>[] a, <span class="type">int</span> l, <span class="type">int</span> h)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pv</span> <span class="operator">=</span> a[l];</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> l;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> h;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line"><span class="comment">//            j从右往左找比基准点小的</span></span><br><span class="line">            <span class="keyword">while</span> (i &lt; j &amp;&amp; a[j] &gt; pv) &#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//            i从左往右找比基准点大的</span></span><br><span class="line">            <span class="keyword">while</span> (i &lt; j &amp;&amp; a[i] &lt;= pv) &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            swap(a, i, j);</span><br><span class="line">        &#125;</span><br><span class="line">        swap(a, l, j);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">quick</span><span class="params">(<span class="type">int</span>[] a, <span class="type">int</span> l, <span class="type">int</span> h)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (l &gt;= h) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p</span> <span class="operator">=</span> partition(a, l, h);</span><br><span class="line">        quick(a, l, p - <span class="number">1</span>);</span><br><span class="line">        quick(a, p + <span class="number">1</span>, h);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//交换</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">        arr[i] = arr[j];</span><br><span class="line">        arr[j] = temp;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong></p>
<p>基准点在左边，并且先j后i (先找到比基准点小的，再找大的)</p>
<p>内层while循环必须加上 <strong>i&lt;j</strong> 的条件，防止越界出错,并且通过i查找时条件不能用 &lt; 而要用 <strong>&lt;=</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> 	<span class="keyword">while</span> (i &lt; j &amp;&amp; a[j] &gt; pv)</span><br><span class="line"><span class="keyword">while</span> (i &lt; j &amp;&amp; a[i] &lt;= pv)</span><br></pre></td></tr></table></figure>

<p><strong>特点：</strong></p>
<p>平均时间复杂度是O(n log2 n)，最坏时间复杂度O(n^2)</p>
<p>数据量较大时，优势非常明显</p>
<p>属于不稳定排序</p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
</search>
